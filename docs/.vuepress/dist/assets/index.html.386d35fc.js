import{_ as c,r as i,o as d,a as p,b as e,d as s,w as h,t as r,F as _,c as t,e as n}from"./app.e4abea88.js";const u={},b=t('<h1 align="center"><a href="https://ladjs.github.io/lad/"><img src="https://lad.js.org/media/lad.png" alt="lad"></a></h1><div align="center"><a href="https://join.slack.com/t/ladjs/shared_invite/zt-fqei6z11-Bq2trhwHQxVc5x~ifiZG0g"><img src="https://img.shields.io/badge/chat-join slack-brightgreen" alt="chat"></a><a href="https://travis-ci.org/ladjs/lad"><img src="https://travis-ci.org/ladjs/lad.svg?branch=master" alt="build status"></a><a href="https://codecov.io/github/ladjs/lad"><img src="https://img.shields.io/codecov/c/github/ladjs/lad/master.svg" alt="code coverage"></a><a href="https://github.com/sindresorhus/xo"><img src="https://img.shields.io/badge/code_style-XO-5ed9c7.svg" alt="code style"></a><a href="https://github.com/prettier/prettier"><img src="https://img.shields.io/badge/styled_with-prettier-ff69b4.svg" alt="styled with prettier"></a><a href="https://lass.js.org"><img src="https://img.shields.io/badge/made_with-lass-95CC28.svg" alt="made with lass"></a><a href="LICENSE"><img src="https://img.shields.io/github/license/ladjs/lad.svg" alt="license"></a></div><br><div align="center"> Lad is the best <a href="https://nodejs.org">Node.js</a> framework. Made by a former <a href="https://github.com/expressjs/express">Express</a> TC and <a href="https://github.com/koajs/koa">Koa</a> team member. </div><div align="center"><sub> A lad that fell in love with a <a href="https://lass.js.org"><strong>lass</strong></a> \u2022 Built by <a href="https://github.com/niftylettuce">@niftylettuce</a> and <a href="#contributors">contributors</a></sub></div><hr><div align="center"><h3><u>Project Spotlight:</u> Forward Email @ <a href="https://forwardemail.net" target="_blank">https://forwardemail.net</a> (made with Lad)</h3><h4><u>Live Framework Demo:</u> <a href="https://lad.sh" target="_blank">https://lad.sh</a></h4></div><hr><div align="center">\u2764\uFE0F Love this project? Support <a href="https://github.com/niftylettuce" target="_blank">@niftylettuce&#39;s</a> <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software" target="_blank">FOSS</a> on <a href="https://patreon.com/niftylettuce" target="_blank">Patreon</a> or <a href="https://paypal.me/niftylettuce">PayPal</a> \u{1F984}</div><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of Contents</h2><ul><li><a href="#features">Features</a><ul><li><a href="#microservices">Microservices</a></li><li><a href="#front-end">Front-end</a></li><li><a href="#back-end">Back-end</a></li><li><a href="#translation">Translation</a></li><li><a href="#email-engine">Email Engine</a></li><li><a href="#error-handling">Error Handling</a></li><li><a href="#performance">Performance</a></li><li><a href="#security">Security</a></li></ul></li><li><a href="#get-started">Get Started</a><ul><li><a href="#requirements">Requirements</a></li><li><a href="#install">Install</a></li><li><a href="#usage">Usage</a></li><li><a href="#configuration">Configuration</a></li><li><a href="#tutorials">Tutorials</a></li><li><a href="#community">Community</a></li></ul></li><li><a href="#architecture">Architecture</a></li><li><a href="#principles">Principles</a></li><li><a href="#related">Related</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#contributors">Contributors</a></li><li><a href="#trademark-notice">Trademark Notice</a></li><li><a href="#license">License</a></li></ul><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><p>Lad boasts dozens of features and is extremely configurable.</p><h3 id="microservices" tabindex="-1"><a class="header-anchor" href="#microservices" aria-hidden="true">#</a> Microservices</h3><p>These microservices are preconfigured for security, performance, and graceful reloading.</p><ul><li>Webapp server \u2192 <a href="template/web.js">web.js</a></li><li>API server \u2192 <a href="template/api.js">api.js</a></li><li>Job scheduler \u2192 <a href="template/bree.js">bree.js</a></li><li>Proxy server \u2192 <a href="template/proxy.js">proxy.js</a></li></ul><h3 id="front-end" tabindex="-1"><a class="header-anchor" href="#front-end" aria-hidden="true">#</a> Front-end</h3>',17),m=n("Browser linting using "),g={href:"https://github.com/amilajack/eslint-plugin-compat",target:"_blank",rel:"noopener noreferrer"},f=n("eslint-plugin-compat"),k=n(" and "),v={href:"https://github.com/ai/browserslist",target:"_blank",rel:"noopener noreferrer"},y=n("browserslist"),w=n(" (see "),j=e("a",{href:"template/.browserslistrc"},".browserslistrc",-1),S=n(" for the default config)"),E={href:"https://pugjs.org",target:"_blank",rel:"noopener noreferrer"},O=n("Pug"),A=n(" template engine (you can easily use "),T={href:"https://github.com/kbrsh/moon",target:"_blank",rel:"noopener noreferrer"},x=n("Moon"),I=n(", "),R={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},N=n("Vue"),C=n(", "),P={href:"https://facebook.github.io/react/",target:"_blank",rel:"noopener noreferrer"},L=n("React"),D=n(", or "),G={href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"},M=n("Angular"),B=n(", though typically "),W={href:"https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it",target:"_blank",rel:"noopener noreferrer"},q=n("you aren't going to need it"),U=n(")"),H={href:"https://gulpjs.com",target:"_blank",rel:"noopener noreferrer"},F=n("Gulp"),K=n(" (latest version 4.x)"),z={href:"http://sass-lang.com/",target:"_blank",rel:"noopener noreferrer"},V=n("Sass"),Y={href:"http://postcss.org/",target:"_blank",rel:"noopener noreferrer"},J=n("PostCSS"),X=n(" (with "),Q={href:"https://github.com/jonathantneal/postcss-font-magician",target:"_blank",rel:"noopener noreferrer"},Z=n("font-magician"),$=n(", "),ee={href:"https://github.com/unlight/postcss-import-url",target:"_blank",rel:"noopener noreferrer"},ne=n("import-url"),se=n(", "),oe={href:"https://github.com/AaronJan/postcss-font-grabber",target:"_blank",rel:"noopener noreferrer"},te=n("font-grabber"),ae=n(", "),re={href:"https://github.com/jelmerdemaat/postcss-base64",target:"_blank",rel:"noopener noreferrer"},ie=n("base64"),le=n(", and "),ce={href:"http://cssnext.io/",target:"_blank",rel:"noopener noreferrer"},de=n("cssnext"),pe=n(" pre-configured)"),he={href:"https://getbootstrap.com/",target:"_blank",rel:"noopener noreferrer"},_e=n("Bootstrap"),ue={href:"http://fontawesome.io/",target:"_blank",rel:"noopener noreferrer"},be=n("Font Awesome"),me={href:"http://tobiasahlin.com/spinkit/",target:"_blank",rel:"noopener noreferrer"},ge=n("SpinKit"),fe={href:"https://limonte.github.io/sweetalert2/",target:"_blank",rel:"noopener noreferrer"},ke=n("SweetAlert2"),ve={href:"http://dense.rah.pw/",target:"_blank",rel:"noopener noreferrer"},ye=n("Dense"),we={href:"http://imakewebthings.com/waypoints/",target:"_blank",rel:"noopener noreferrer"},je=n("Waypoints"),Se={href:"https://github.com/intesso/connect-livereload",target:"_blank",rel:"noopener noreferrer"},Ee=n("LiveReload"),Oe=e("li",null,"\u2026",-1),Ae=e("h3",{id:"back-end",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#back-end","aria-hidden":"true"},"#"),n(" Back-end")],-1),Te=n("Redis, sessions, and flash toast and modal "),xe={href:"https://limonte.github.io/sweetalert2/",target:"_blank",rel:"noopener noreferrer"},Ie=n("SweetAlert2"),Re=n(" messages (uses "),Ne={href:"https://github.com/luin/ioredis",target:"_blank",rel:"noopener noreferrer"},Ce=n("ioredis"),Pe=n(" which has support for "),Le={href:"https://redis.io/topics/cluster-tutorial",target:"_blank",rel:"noopener noreferrer"},De=n("Cluster"),Ge=n(", "),Me={href:"https://redis.io/topics/sentinel",target:"_blank",rel:"noopener noreferrer"},Be=n("Sentinel"),We=n(", and more)"),qe=e("li",null,"Koa-based webapp and API servers (uses HTTP/2 for production!)",-1),Ue=n("Pagination built-in (using "),He={href:"https://github.com/koajs/ctx-paginate",target:"_blank",rel:"noopener noreferrer"},Fe=n("ctx-paginate"),Ke=n(")"),ze=e("li",null,"RESTful API with BasicAuth and versioning",-1),Ve=n("Automated job scheduler with cron and human-readable syntax (backed by "),Ye={href:"http://mongoosejs.com",target:"_blank",rel:"noopener noreferrer"},Je=n("Mongoose"),Xe=n(" and "),Qe={href:"https://jobscheduler.net",target:"_blank",rel:"noopener noreferrer"},Ze=n("Bree"),$e=n(")"),en=e("li",null,"Passport-based authentication and group-based (Unix-like) permissioning",-1),nn=e("li",null,"Stripe-inspired error handling",-1),sn=e("li",null,"Mongoose and MongoDB with common database plugins",-1),on=n("Email template engine with "),tn={href:"https://nodemailer.com/",target:"_blank",rel:"noopener noreferrer"},an=n("Nodemailer"),rn=n(" and local rendering"),ln=e("li",null,"Proxy eliminates need for Nginx reverse-proxy or Apache virtual hosts",-1),cn=e("li",null,[n("Multilingual through built-in i18n translation support ("),e("a",{href:"#translation-configuration"},"see configuration"),n(")")],-1),dn=e("li",null,"Automatic phrase translation with Google Translate",-1),pn=e("li",null,"Sitemap generator for simple SEO",-1),hn=e("li",null,"\u2026",-1),_n=e("h3",{id:"translation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#translation","aria-hidden":"true"},"#"),n(" Translation")],-1),un=e("p",null,"Finally a framework that solves i18n everywhere; complete with automatic translation.",-1),bn=n("Translation constants built-in so you "),mn={href:"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",target:"_blank",rel:"noopener noreferrer"},gn=n("don't repeat yourself"),fn=e("li",null,"Webapp error messages and templates are translated",-1),kn=e("li",null,"Emails are translated",-1),vn=e("li",null,"API responses are translated",-1),yn=e("li",null,"Database errors are translated",-1),wn=e("li",null,"Authentication errors are translated",-1),jn=e("li",null,"\u2026",-1),Sn=e("h3",{id:"email-engine",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#email-engine","aria-hidden":"true"},"#"),n(" Email Engine")],-1),En=n("Our beautiful email engine uses "),On={href:"https://github.com/niftylettuce/node-email-templates",target:"_blank",rel:"noopener noreferrer"},An=n("email-templates"),Tn=n(" (which is also made by the creator of Lad)!"),xn=e("li",null,"Test your emails locally with automatic browser-rendering on the fly",-1),In=e("li",null,"Automatically inlines CSS for cross-browser and cross-platform email client support",-1),Rn=n("Use "),Nn={href:"https://getbootstrap.com/",target:"_blank",rel:"noopener noreferrer"},Cn=n("Bootstrap"),Pn=n(" in your email template designs"),Ln=e("li",null,"Reuse your existing CSS and webapp styling",-1),Dn=e("li",null,"Use any template engine (defaults to Pug)",-1),Gn={href:"https://github.com/ladjs/custom-fonts-in-emails",target:"_blank",rel:"noopener noreferrer"},Mn=n("Render custom fonts in emails with code"),Bn={href:"https://github.com/ladjs/font-awesome-assets",target:"_blank",rel:"noopener noreferrer"},Wn=n("Add icons with Font Awesome with code"),qn={href:"https://github.com/ladjs/nodemailer-base64-to-s3",target:"_blank",rel:"noopener noreferrer"},Un=n("Automatically avoid email client caching"),Hn=e("li",null,"Include any image you want and it will be properly rendered",-1),Fn=e("li",null,"Rids the need for awkward embedded image CID attachments",-1),Kn=e("li",null,"\u2026",-1),zn=e("h3",{id:"error-handling",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#error-handling","aria-hidden":"true"},"#"),n(" Error Handling")],-1),Vn=e("p",null,"We've spent a lot of time designing a beautiful error handler.",-1),Yn=e("li",null,[n("Supports "),e("code",null,"text/html"),n(", "),e("code",null,"application/json"),n(", and "),e("code",null,"text"),n(" response types")],-1),Jn={href:"https://github.com/niftylettuce/koa-better-error-handler#user-friendly-responses",target:"_blank",rel:"noopener noreferrer"},Xn=n("User-friendly responses"),Qn={href:"https://github.com/niftylettuce/koa-better-error-handler#html-error-lists",target:"_blank",rel:"noopener noreferrer"},Zn=n("HTML error lists"),$n=e("li",null,"\u2026",-1),es=n("See "),ns={href:"https://github.com/niftylettuce/koa-better-error-handler",target:"_blank",rel:"noopener noreferrer"},ss=n("koa-better-error-handler"),os=n(" for a complete reference."),ts=t('<h3 id="performance" tabindex="-1"><a class="header-anchor" href="#performance" aria-hidden="true">#</a> Performance</h3><ul><li>Compression and zero-bloat approach</li><li>Stream-based file uploading</li><li>Graceful reloading, shutdown, and reconnection handling</li><li>Manifest asset revisioning</li><li>Amazon S3 and CloudFront ready</li><li>\u2026</li></ul><h3 id="security" tabindex="-1"><a class="header-anchor" href="#security" aria-hidden="true">#</a> Security</h3>',3),as=e("li",null,"Database security plugins and helpers",-1),rs=e("li",null,"Automated tests and code coverage",-1),is=n('CORS, SameSite set to "lax" ('),ls={href:"https://scotthelme.co.uk/csrf-is-dead/",target:"_blank",rel:"noopener noreferrer"},cs=n("an alternative to CSRF"),ds=n("), CSRF (since "),ps={href:"https://caniuse.com/#search=SameSite",target:"_blank",rel:"noopener noreferrer"},hs=n("not all browsers"),_s=n(" support SameSite yet) XSS, and rate limited protection"),us=e("li",null,"Dotenv support for environment-based configurations",-1),bs=e("li",null,"App, user, and request-based logging",-1),ms=e("li",null,[n("SSL-ready (see "),e("a",{href:"#ssl-configuration"},"instructions below"),n(")")],-1),gs=e("li",null,"\u2026",-1),fs=e("h2",{id:"get-started",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#get-started","aria-hidden":"true"},"#"),n(" Get Started")],-1),ks=e("p",null,"We strictly support Mac and Ubuntu-based operating systems (we do not support Windows).",-1),vs=e("h3",{id:"requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),n(" Requirements")],-1),ys=e("p",null,"Please ensure your operating system has the following software installed:",-1),ws={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},js=n("Git"),Ss=n(" - see "),Es={href:"https://help.github.com/articles/set-up-git/",target:"_blank",rel:"noopener noreferrer"},Os=n("GitHub's tutorial"),As=n(" for installation"),Ts={href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},xs=n("Node.js"),Is=n(" (v10+) - use "),Rs={href:"https://github.com/creationix/nvm",target:"_blank",rel:"noopener noreferrer"},Ns=n("nvm"),Cs=n(" to install it on any OS"),Ps=e("li",null,[n("After installing "),e("code",null,"nvm"),n(" you will need to run "),e("code",null,"nvm install node")],-1),Ls=n("We also recommend you install "),Ds={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},Gs=n("yarn"),Ms=n(", which is an alternative to "),Bs={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},Ws=n("npm"),qs={href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},Us=n("MongoDB"),Hs=n(" (v3.x+):"),Fs=n("Mac (via "),Ks={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},zs=n("brew"),Vs=n("): "),Ys=e("code",null,"brew tap mongodb/brew && brew install mongodb-community && brew services start mongodb-community",-1),Js=n("."),Xs=t(`<li><p>Ubuntu:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb http://repo.mongodb.org/apt/ubuntu &quot;</span><span class="token variable"><span class="token variable">$(</span>lsb_release -sc<span class="token variable">)</span></span><span class="token string">&quot;/mongodb-org/3.4 multiverse&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/mongodb-org-3.4.list
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> mongodb-org
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>`,1),Qs={href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"},Zs=n("Redis"),$s=n(" (v4.x+):"),eo=n("Mac (via "),no={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},so=n("brew"),oo=n("): "),to=e("code",null,"brew install redis && brew services start redis",-1),ao=t(`<li><p>Ubuntu:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> add-apt-repository -y ppa:chris-lea/redis-server
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>`,1),ro=e("h3",{id:"install",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install","aria-hidden":"true"},"#"),n(" Install")],-1),io={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},lo=n("npm"),co=n(":"),po=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g lad
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),ho={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},_o=n("yarn"),uo=n(":"),bo=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> lad
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><h4 id="create-a-project" tabindex="-1"><a class="header-anchor" href="#create-a-project" aria-hidden="true">#</a> Create a project</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>lad new-project
<span class="token builtin class-name">cd</span> new-project
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="development" tabindex="-1"><a class="header-anchor" href="#development" aria-hidden="true">#</a> Development</h4><p>To begin, try typing <code>npm start</code> (or <code>yarn start</code>) on command line. This will display to you all the scripts you can run.</p>`,6),mo=n("The "),go=e("code",null,"start",-1),fo=n(" script (among many others) uses "),ko={href:"https://github.com/kentcdodds/nps",target:"_blank",rel:"noopener noreferrer"},vo=n("nps"),yo=n(" and "),wo={href:"https://github.com/kentcdodds/nps-utils",target:"_blank",rel:"noopener noreferrer"},jo=n("nps-utils"),So=n(" under the hood. This helps to keep scripts very developer-friendly, and rids the need to write in JSON syntax."),Eo=e("p",null,[n("This script accepts a "),e("code",null,"<task>"),n(" argument, whereas a task of "),e("code",null,"all"),n(" will spawn, watch, and re-compile all of the "),e("a",{href:"#microservices"},"microservices"),n(" mentioned above.")],-1),Oo=n("Just open "),Ao={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},To=n("http://localhost:3000"),xo=n(" for testing!"),Io={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},Ro=n("npm"),No=n(":"),Co=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> start all
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Po={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},Lo=n("yarn"),Do=n(":"),Go=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> start all
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="debugging" tabindex="-1"><a class="header-anchor" href="#debugging" aria-hidden="true">#</a> Debugging</h5>`,2),Mo=e("code",null,"DEBUG",-1),Bo=n(" - debug using "),Wo={href:"https://github.com/visionmedia/debug",target:"_blank",rel:"noopener noreferrer"},qo=n("debug"),Uo=n(" output (widely adopted package in the community for debugging across all Node packages):"),Ho=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>* <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Fo=e("code",null,"NODE_DEBUG",-1),Ko=n(" - debug "),zo={href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},Vo=n("node"),Yo=n(" internal modules:"),Jo=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">NODE_DEBUG</span><span class="token operator">=</span>* <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Xo=t(`<li><p><code>MONGOOSE_DEBUG</code> - debug Mongoose raw database operation output:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">MONGOOSE_DEBUG</span><span class="token operator">=</span>true <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><code>TRANSPORT_DEBUG</code> - debug Nodemailer transport:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">TRANSPORT_DEBUG</span><span class="token operator">=</span>true <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li>`,2),Qo=e("code",null,"REDIS_MONITOR",-1),Zo=n(" - debug Redis using "),$o=e("code",null,"MONITOR",-1),et=n(" (uses "),nt={href:"https://github.com/ladjs/redis",target:"_blank",rel:"noopener noreferrer"},st=n("@ladjs/redis"),ot=n(" and passes "),tt=e("code",null,"true",-1),at=n(" for the "),rt=e("code",null,"monitor",-1),it=n(" argument):"),lt=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">REDIS_MONITOR</span><span class="token operator">=</span>true <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),ct=e("code",null,"REDIS_FRIENDLY_ERROR_STACK",-1),dt=n(" - debug Redis with friendly error stack messages (see "),pt={href:"https://github.com/luin/ioredis#error-handling",target:"_blank",rel:"noopener noreferrer"},ht=n("showFriendlyErrorStack"),_t=n(" option of "),ut={href:"https://github.com/luin/ioredis",target:"_blank",rel:"noopener noreferrer"},bt=n("ioredis"),mt=n(")"),gt=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">REDIS_FRIENDLY_ERROR_STACK</span><span class="token operator">=</span>true <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),ft=e("h4",{id:"production",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#production","aria-hidden":"true"},"#"),n(" Production")],-1),kt=n("We strongly recommend using "),vt={href:"https://semaphoreci.com/?ref=lad",target:"_blank",rel:"noopener noreferrer"},yt=n("SemaphoreCI"),wt=n(", "),jt={href:"http://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"},St=n("PM2"),Et=n(", and "),Ot={href:"https://m.do.co/c/a7fe489d1b27",target:"_blank",rel:"noopener noreferrer"},At=n("Digital Ocean"),Tt=n(" for production deployment."),xt=n("We've provided you with a preconfigured "),It=e("a",{href:"template/ecosystem.json"},"ecosystem.json",-1),Rt=n(),Nt={href:"http://pm2.keymetrics.io/docs/usage/deployment/",target:"_blank",rel:"noopener noreferrer"},Ct=n("deployment file"),Pt=n(". You will need to modify this file with your server's IP, hostname, and other metadata if needed."),Lt=n("Make sure that your project's assets are built with "),Dt=e("code",null,"NODE_ENV=production",-1),Gt=n(" flag, e.g. "),Mt=e("code",null,"NODE_ENV=production npm run build",-1),Bt=n(" (or with yarn as "),Wt=e("code",null,"yarn build",-1),qt=n(");this creates a "),Ut=e("code",null,"build/rev-manifest.json",-1),Ht=n(" file per "),Ft={href:"https://github.com/niftylettuce/koa-manifest-rev",target:"_blank",rel:"noopener noreferrer"},Kt=n("koa-manifest-rev"),zt=n("."),Vt=n("You can test this locally by installing "),Yt={href:"http://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"},Jt=n("PM2"),Xt=n(" globally with "),Qt={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},Zt=n("npm"),$t=n(" or "),ea={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},na=n("yarn"),sa=n(", and then running the following command:"),oa=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production pm2 start
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),ta=t('<li><p>See the <a href="#continuous-integration-and-code-coverage">Continuous Integration and Code Coverage</a> and <a href="#tutorials">Tutorials</a> sections below for instructions on how to setup continuous integration, code coverage, and deployment.</p></li><li><p>If you specify an environment variable value for <code>AWS_CF_DOMAIN</code> and <code>NODE_ENV=production</code> is set then your assets will need to be published to Amazon S3/Cloudfront. To do so run <code>npm start publish-assets</code> (or with yarn as <code>yarn start publish-assets</code>). This command automatically sets <code>NODE_ENV=production</code> for you as well via <code>cross-env</code>.</p></li>',2),aa=e("h4",{id:"provisioning",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#provisioning","aria-hidden":"true"},"#"),n(" Provisioning")],-1),ra=n("See the "),ia=n("ansible"),la=n(" folder for our "),ca={href:"https://github.com/ansible/ansible",target:"_blank",rel:"noopener noreferrer"},da=n("Ansible"),pa=n(" configuration and playbooks, which we use to provision servers with."),ha=n("We recommend you to install "),_a={href:"https://github.com/adrienverge/yamllint",target:"_blank",rel:"noopener noreferrer"},ua=n("yamllint"),ba=n(" and configure it in your editor while working with "),ma={href:"https://github.com/ansible/ansible",target:"_blank",rel:"noopener noreferrer"},ga=n("Ansible"),fa=n(" playbooks."),ka=n("Also note that "),va={href:"https://github.com/ansible/ansible-lint",target:"_blank",rel:"noopener noreferrer"},ya=n("ansible-lint"),wa=n(" is a helpful linting tool you can use if you plan on making changes to playbooks. Note that our current playbooks have several existing lint errors."),ja=n("First you must provision Ubuntu 18.04 LTS 64-bit server(s) using "),Sa={href:"https://m.do.co/c/2ffb8129b8d6",target:"_blank",rel:"noopener noreferrer"},Ea=n("Digital Ocean"),Oa=n(", "),Aa={href:"https://www.linode.com/?r=a2840b36770c7020730251a5643428ddbf2e284e",target:"_blank",rel:"noopener noreferrer"},Ta=n("Linode"),xa=n(", "),Ia={href:"https://www.vultr.com/?ref=7429848",target:"_blank",rel:"noopener noreferrer"},Ra=n("Vultr"),Na=n(", or your host of choice. These newly provisioned server(s) should have your SSH key automatically added."),Ca=e("p",null,[n("Follow the "),e("a",{href:"#deployment"},"Deployment"),n(" guide below for automatic provisioning and deployment instructions.")],-1),Pa=e("h5",{id:"deployment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployment","aria-hidden":"true"},"#"),n(" Deployment")],-1),La=t(`<li><p>Set up host configuration by copying the <code>hosts.yml</code> file template:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> ansible/playbooks/templates/hosts.yml hosts.yml
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Edit this configuration and update the file with your newly created server aliases and IP addresses. You can add more than one host to each group if you are setting up load balancing. Refer to the <a href="#naming-convention">Naming Convention</a> documentation for our recommended approach to server alias naming. Note that this file is automatically ignored by git. If you have a private repository and would like to commit this, then remove <code>hosts.yml</code> from the root <code>.gitignore</code> file.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> hosts.yml
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Set up environment configuration by copying the <code>env</code> file template:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cp</span> ansible/playbooks/templates/env .env.production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li>`,3),Da=n("Edit this configuration and reference the official "),Ga={href:"https://lad.js.org",target:"_blank",rel:"noopener noreferrer"},Ma=n("Lad"),Ba=n(" documentation for a list of all available environment variables (or see "),Wa=e("a",{href:".env.defaults"},".env.defaults",-1),qa=n("). "),Ua=e("strong",null,"You will need to open this file in your preferred editor",-1),Ha=n(" and set the values for any fields containing "),Fa=e("code",null,"TODO",-1),Ka=n(", whereby you replace "),za=e("code",null,"TODO",-1),Va=n(" with the appropriate value. Preserve double quotes where they are already defined."),Ya=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> .env.production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Ja=n("Generate "),Xa={href:"http://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"},Qa=n("pm2"),Za=n(),$a={href:"https://pm2.keymetrics.io/docs/usage/application-declaration/",target:"_blank",rel:"noopener noreferrer"},er=n("ecosystem files"),nr=n(" using our automatic template generator. We created an "),sr=e("a",{href:"ansible-playbook.js"},"ansible-playbook.js",-1),or=n(" which loads the "),tr=e("code",null,".env.production",-1),ar=n(" environment variables rendered with "),rr={href:"https://github.com/ladjs/env",target:"_blank",rel:"noopener noreferrer"},ir=n("@ladjs/env"),lr=n(" into "),cr=e("code",null,[n("p"),e("wbr"),n("rocess.env")],-1),dr=n(", which then gets used in the playbooks. This is a superior, simple, and the only known dotenv approach we know of in Ansible. Newly created "),pr=e("code",null,"ecosystem-api.json",-1),hr=n(", "),_r=e("code",null,"ecosystem-bree.json",-1),ur=n(", "),br=e("code",null,"ecosystem-web.json",-1),mr=n(" files will now be created for you in the root of the repository. If you ever more add or change IP addresses, you can simply re-run this command."),gr=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/ecosystem.yml -l <span class="token string">&#39;localhost&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),fr=n("Set up the web and API server(s) (see "),kr={href:"https://docs.ansible.com/ansible/latest/user_guide/intro_patterns.html#patterns-and-ansible-playbook-flags",target:"_blank",rel:"noopener noreferrer"},vr=n("patterns and ansible-playbook flags docs"),yr=n(" if you need help). If you completely (or partially) run this playbook (or any others below), then the second time you try to run it may not succeed. This is because we prevent root user access through security hardening. To workaround this, run the same command but without "),wr=e("code",null,"-e 'ansible_user=root'",-1),jr=n(" appended as it will default to the "),Sr=e("code",null,"devops",-1),Er=n(" user created."),Or=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/http.yml -e <span class="token string">&#39;ansible_user=root&#39;</span> -l <span class="token string">&#39;http&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Ar=t(`<li><p>Set up the Bree server(s):</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/bree.yml -e <span class="token string">&#39;ansible_user=root&#39;</span> -l <span class="token string">&#39;bree&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Set up the Redis server:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/redis.yml -e <span class="token string">&#39;ansible_user=root&#39;</span> -l <span class="token string">&#39;redis&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Set up the Mongo server:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/mongo.yml -e <span class="token string">&#39;ansible_user=root&#39;</span> -l <span class="token string">&#39;mongo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Set up GitHub deployment keys for all the servers. Note that the <code>deployment-keys</code> directory is ignored from git, so if you have a private repository and wish to commit it, then remove <code>deployment-keys</code> from the <code>.gitignore</code> file.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/deployment-keys.yml -l <span class="token string">&#39;http:bree&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Go to your repository &quot;Settings&quot; page on GitHub, click on &quot;Deploy keys&quot;, and then add a deployment key for each servers&#39; deployment key copied to the <code>deployment-keys</code> directory. If you&#39;re on macOS, you can use the <code>pbcopy</code> command to copy each file&#39;s contents to your clipboard. Use tab completion for speed, and replace the server names and paths with yours:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> deployment-keys/api-1-li-dal.forwardemail.net.pub <span class="token operator">|</span> pbcopy

<span class="token comment">#</span>
<span class="token comment"># NOTE: repeat the above command for all servers</span>
<span class="token comment"># and after running the command, it will copy</span>
<span class="token comment"># the key to your clipboard for you to paste as</span>
<span class="token comment"># a new deploy key (make sure to use read-only access)</span>
<span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>Set up PM2 deployment directories on all the servers:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-web.json production setup
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-api.json production setup
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-bree.json production setup
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li>`,6),Tr=n("Create a SSL certificate at "),xr={href:"https://namecheap.com",target:"_blank",rel:"noopener noreferrer"},Ir=n("Namecheap"),Rr=n(" (we recommend a 5 year wildcard certificate), set up the certificate, and download and extract the ZIP file with the certificate (emailed to you) to your computer. We do not recommend using tools like "),Nr={href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"},Cr=n("LetsEncrypt"),Pr=t(" and <code>certbot</code> due to complexity when you have (or scale to) a cluster of servers set up behind load balancers. In other words, we&#39;ve tried approaches like <code>lsyncd</code> in combination with <code>crontab</code> for <code>certbot</code> renewals and automatic checking. Furthermore, using this exposes the server(s) to downtime as ports <code>80</code> and <code>443</code> may need to be shut down so that <code>certbot</code> can use them for certificate generation. This is not a reliable approach, and simply renewing certificates once a year is vastly simpler and also makes using load balancers trivial. Instead you can use a provider like ",15),Lr={href:"https://namecheap.com",target:"_blank",rel:"noopener noreferrer"},Dr=n("Namecheap"),Gr=n(" to get a cheap SSL certificate, then run a few commands as we've documented below. This command will prompt you for an absolute file path to the certificates you downloaded. Renewed your certificate after 1 year? Simply follow this step again. Do not set a password on the certificate files. When using the "),Mr=e("code",null,"openssl",-1),Br=n(" command (see Namecheap instructions), you need to use "),Wr=e("code",null,"*.example.com",-1),qr=n(" with an asterisk followed by a period if you are registering a wildcard certificate."),Ur=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ansible-playbook ansible/playbooks/certificates.yml
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p><strong>Important:</strong> If you renew or change certificates in the future, then after running the previous command, you will subsequently need to reload the processes as such:</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#</span>
<span class="token comment"># NOTE: See the &quot;Important&quot; note above BEFORE running this command.</span>
<span class="token comment">#       This command ONLY APPLIES for certificate renewals/changes.</span>
<span class="token comment">#</span>
pm2 deploy ecosystem-web.json production <span class="token builtin class-name">exec</span> <span class="token string">&quot;pm2 reload web&quot;</span>
pm2 deploy ecosystem-api.json production <span class="token builtin class-name">exec</span> <span class="token string">&quot;pm2 reload api&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,3),Hr=n("(Optional) Create a Google application credentials profile file and store it locally. You only need this if you want to support automatic translation. The following command will prompt you for the absolute file path (e.g. "),Fr=e("code",null,"/path/to/client-profile.json",-1),Kr=n("). See the "),zr={href:"https://github.com/niftylettuce/mandarin",target:"_blank",rel:"noopener noreferrer"},Vr=n("mandarin"),Yr=n(" docs for more information."),Jr=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ansible-playbook ansible/playbooks/gapp-creds.yml -l <span class="token string">&#39;http:bree&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),Xr=t(`<li><p>Copy the <code>.env.production</code> file and create an AWS config file on the servers:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ansible-playbook ansible/playbooks/env.yml -l <span class="token string">&#39;http:bree&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Run an initial deploy to all the servers:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-web.json production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-api.json production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-bree.json production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Save the process list on the servers so when if the server were to reboot, it will automatically boot back up the processes:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-web.json production <span class="token builtin class-name">exec</span> <span class="token string">&quot;pm2 save&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-api.json production <span class="token builtin class-name">exec</span> <span class="token string">&quot;pm2 save&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 deploy ecosystem-bree.json production <span class="token builtin class-name">exec</span> <span class="token string">&quot;pm2 save&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Test by visiting your web and API server in your browser (click &quot;proceed to unsafe&quot; site and bypass certificate warning).</p></li><li><p>Configure your DNS records for the web and API server hostnames and respective IP addresses.</p></li><li><p>Test by visiting your web and API server in your browser (in an incognito window). There should not be any certificate warnings (similar to the one that occurred in step 15).</p></li><li><p>(Optional) Remove the local <code>.env.production</code> file for security purposes. If you do this, then make sure you have a backup, or securely back up off the server in the future before destroying the server.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">rm</span> .env.production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>(Optional) Remove the local certificate files you downloaded locally and specified in step 11. If you do this, then make sure you have a backup, or securely back up off the server in the future before destroying the server.</p></li>`,8),Qr=n("Finished. If you need to deploy again, then push your changes to GitHub "),Zr=e("code",null,"master",-1),$r=n(" branch and then follow step 14 again. We recommend you to read the "),ei={href:"https://docs.ansible.com/ansible/latest/user_guide/intro_getting_started.html",target:"_blank",rel:"noopener noreferrer"},ni=n("Ansible getting started guide"),si=n(", as it provides you with insight into commands like "),oi=e("code",null,'ansible all -a "echo hello"',-1),ti=n(" which can be run across all or specific servers."),ai=e("h4",{id:"tests",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tests","aria-hidden":"true"},"#"),n(" Tests")],-1),ri=n("We use "),ii={href:"https://github.com/avajs/ava",target:"_blank",rel:"noopener noreferrer"},li=n("ava"),ci=n(" and "),di={href:"https://github.com/istanbuljs/nyc",target:"_blank",rel:"noopener noreferrer"},pi=n("nyc"),hi=n(" for testing and code coverage."),_i={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},ui=n("npm"),bi=n(":"),mi=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1),gi={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},fi=n("yarn"),ki=n(":"),vi=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3><h4 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a> Environment Variables</h4>`,3),yi=n("We have made configuration of your Lad project easy through a "),wi={href:"https://github.com/motdotla/dotenv",target:"_blank",rel:"noopener noreferrer"},ji=n("dotenv"),Si=n(" configuration package called "),Ei={href:"https://github.com/ladjs/env",target:"_blank",rel:"noopener noreferrer"},Oi=n("@ladjs/env"),Ai=n(", per "),Ti={href:"https://12factor.net/",target:"_blank",rel:"noopener noreferrer"},xi=n("Twelve-Factor"),Ii=n("."),Ri=e("p",null,"We use the following three packages to manage configuration:",-1),Ni={href:"https://github.com/niftylettuce/node-dotenv-extended",target:"_blank",rel:"noopener noreferrer"},Ci=n("dotenv-extended"),Pi=n(" - allows us to craft a "),Li=e("code",null,".env",-1),Di=n(' definition (otherwise known as a "schema") in a file named '),Gi=e("code",null,".env.schema",-1),Mi={href:"https://github.com/janl/mustache.js/",target:"_blank",rel:"noopener noreferrer"},Bi=n("mustache"),Wi=n(" - allows us to use the "),qi={href:"https://github.com/janl/mustache.js/",target:"_blank",rel:"noopener noreferrer"},Ui=n("Mustache templating language"),Hi=n(" in our "),Fi=e("code",null,".env",-1),Ki=n(" and "),zi=e("code",null,".env.defaults",-1),Vi=n(" configuration files"),Yi={href:"https://github.com/niftylettuce/dotenv-parse-variables",target:"_blank",rel:"noopener noreferrer"},Ji=n("dotenv-parse-variables"),Xi=t(" - automatically parses variable types from <code>p<wbr>rocess.env</code> (e.g. <code>FOO=4</code> will set <code>p<wbr>rocess.env.FOO = 4</code> with a <code>Number</code> variable type instead of a <code>String</code>)",11),Qi=t("<p>Configuration is managed by the following, in order of priority:</p><ol><li>Contents of the file at <code>config/index.js</code> (reads in <code>p<wbr>rocess.env</code> environment variables)</li><li>Contents of the files in directories under <code>config/environments/</code> (sets defaults per environment, e.g. you can pass <code>NODE_ENV=staging</code> and it will load the file at <code>config/environments/staging.js</code>)</li><li>Environment variables used to override defaults or set required ones (e.g. <code>NODE_ENV=production</code>)</li><li>Environment configuration in <code>.env</code></li><li>Environment configuration in <code>.env.defaults</code></li></ol><p>Precedence is taken by the environment configuration files, environment variables, then the <code>.env</code> file.</p>",3),Zi=n("Basically "),$i={href:"https://github.com/motdotla/dotenv",target:"_blank",rel:"noopener noreferrer"},el=n("dotenv"),nl=n(" won't set an environment variable if it already detects it was passed as an environment variable."),sl=e("p",null,[n("Take a look at the "),e("a",{href:"template/config"},"config"),n(" folder contents and also at the defaults at "),e("a",{href:"template/.env.defaults"},".env.defaults"),n(".")],-1),ol=e("li",null,[e("code",null,"NODE_ENV"),n(" - (options: "),e("code",null,"development"),n(", "),e("code",null,"production"),n(" default: "),e("code",null,"development"),n(") - the node environment the app is running in")],-1),tl=e("code",null,"PROXY_PORT",-1),al=n(" - (default: "),rl=e("code",null,"8080",-1),il=n(") - proxy port used to proxy requests (see "),ll={href:"https://github.com/ladjs/proxy",target:"_blank",rel:"noopener noreferrer"},cl=n("ladjs/proxy"),dl=n(")"),pl=t("<li><code>HTTP_PROTOCOL</code> - (defaults: <code>http</code> recommend: <code>https</code>) - protocol used for http requests</li><li><code>HTTP_PORT</code> - (defaults: <code>80</code> recommend: <code>443</code>) - http port used for http requests</li>",2),hl=e("code",null,"WEB_PROTOCOL",-1),_l=n(" - (default: "),ul=e("code",null,"http",-1),bl=n(") - "),ml={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},gl=n("ladjs/web"),fl=n(" application protocol"),kl=e("code",null,"WEB_HOST",-1),vl=n(" - (default: "),yl=e("code",null,"localhost",-1),wl=n(") - "),jl={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},Sl=n("ladjs/web"),El=n(" application host"),Ol=e("code",null,"WEB_PORT",-1),Al=n(" - (default: "),Tl=e("code",null,"3000",-1),xl=n(") - "),Il={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},Rl=n("ladjs/web"),Nl=n(" application port"),Cl=e("code",null,"WEB_URL",-1),Pl=n(" - (default: "),Ll=n(") - web application absolute URI"),Dl=e("code",null,"WEB_SSL_KEY_PATH",-1),Gl=n(" - "),Ml={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},Bl=n("ladjs/web"),Wl=n(" file path to your SSL key file"),ql=e("code",null,"WEB_SSL_CERT_PATH",-1),Ul=n(" - "),Hl={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},Fl=n("ladjs/web"),Kl=n(" file path to your SSL certificate file"),zl=e("code",null,"WEB_SSL_CA_PATH",-1),Vl=n(" - "),Yl={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},Jl=n("ladjs/web"),Xl=n(" file path to your SSL certificate authority file"),Ql=e("code",null,"API_HOST",-1),Zl=n(" - (default: "),$l=e("code",null,"localhost",-1),ec=n(") - "),nc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},sc=n("ladjs/api"),oc=n(" host"),tc=e("code",null,"API_PORT",-1),ac=n(" - (default: "),rc=e("code",null,"4000",-1),ic=n(") - "),lc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},cc=n("ladjs/api"),dc=n(" port"),pc=e("code",null,"API_PROTOCOL",-1),hc=n(" - (default: "),_c=e("code",null,"http",-1),uc=n(" recommend: "),bc=e("code",null,"https",-1),mc=n(") - "),gc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},fc=n("ladjs/api"),kc=n(" protocol"),vc=e("code",null,"API_URL",-1),yc=n(" - (default: "),wc=n(") - "),jc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},Sc=n("ladjs/api"),Ec=n(" absolute URI"),Oc=e("code",null,"API_SSL_KEY_PATH",-1),Ac=n(" - "),Tc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},xc=n("ladjs/api"),Ic=n(" file path to your SSL key file"),Rc=e("code",null,"API_SSL_CERT_PATH",-1),Nc=n(" - "),Cc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},Pc=n("ladjs/api"),Lc=n(" file path to your SSL certificate file"),Dc=e("code",null,"API_SSL_CA_PATH",-1),Gc=n(" - "),Mc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},Bc=n("ladjs/api"),Wc=n(" file path to your SSL certificate authority file"),qc=e("code",null,"API_RATELIMIT_WHITELIST",-1),Uc=n(" - "),Hc={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},Fc=n("ladjs/api"),Kc=n(" ratelimiter whitelisted ips (see: "),zc={href:"https://github.com/scttcper/koa-simple-ratelimit",target:"_blank",rel:"noopener noreferrer"},Vc=n("koa-simple-ratelimit"),Yc=n(")"),Jc=e("code",null,"APP_NAME",-1),Xc=n(" - (default: "),Qc=e("code",null,"Lad",-1),Zc=n(") - application name (see "),$c={href:"https://github.com/search?p=3&q=org%3Aladjs+appName&type=Code",target:"_blank",rel:"noopener noreferrer"},ed=n("usage"),nd=n(")"),sd=e("code",null,"APP_COLOR",-1),od=n(" - application color theme (see "),td={href:"https://github.com/search?q=org%3Aladjs+appColor&type=Code",target:"_blank",rel:"noopener noreferrer"},ad=n("usage"),rd=n(")"),id=e("li",null,[e("code",null,"TWITTER"),n(" - (default: "),e("code",null,"@niftylettuce"),n(") twitter handle")],-1),ld=e("code",null,"SEND_EMAIL",-1),cd=n(" - (default: "),dd=e("code",null,"false",-1),pd=n(") - whether to send email or preview (see "),hd={href:"https://github.com/ladjs/lad#outbound-email-configuration",target:"_blank",rel:"noopener noreferrer"},_d=n("outbound email configuration"),ud=n(")"),bd=e("code",null,"TRANSPORT_DEBUG",-1),md=n(" - (default: "),gd=e("code",null,"false",-1),fd=n(") - email transport debug logging (see "),kd={href:"https://github.com/ladjs/lad#debugging",target:"_blank",rel:"noopener noreferrer"},vd=n("debugging"),yd=n(")"),wd=e("li",null,[e("code",null,"EMAIL_DEFAULT_FROM"),n(" - (default: "),e("code",null,"support@127.0.01"),n(") - default email "),e("code",null,"from"),n(" address")],-1),jd=e("code",null,"SHOW_STACK",-1),Sd=n(" - (default: "),Ed=e("code",null,"true",-1),Od=n(") - whether or not to output a stack trace when logging (see "),Ad={href:"https://github.com/cabinjs/axe#options",target:"_blank",rel:"noopener noreferrer"},Td=n("cabinjs options"),xd=n(")"),Id=e("code",null,"SHOW_META",-1),Rd=n(" - (default: "),Nd=e("code",null,"true",-1),Cd=n(") - whether or not to output metadata to logger methods (see "),Pd={href:"https://github.com/cabinjs/axe#options",target:"_blank",rel:"noopener noreferrer"},Ld=n("cabinjs options"),Dd=n(")"),Gd=e("li",null,[e("code",null,"SUPPORT_REQUEST_MAX_LENGTH"),n(" - (default: "),e("code",null,"500"),n(") - support request max message size in characters")],-1),Md=e("code",null,"ERROR_HANDLER_BASE_URL",-1),Bd=n(" - (default: "),Wd=n(") error handling base url (see "),qd={href:"https://github.com/ladjs/koa-better-error-handler",target:"_blank",rel:"noopener noreferrer"},Ud=n("koa-better-error-handler"),Hd=n(")"),Fd=e("code",null,"I18N_SYNC_FILES",-1),Kd=n(" - (default: "),zd=e("code",null,"true",-1),Vd=n(") - sync locale information across all files (see "),Yd={href:"https://github.com/ladjs/i18n#options",target:"_blank",rel:"noopener noreferrer"},Jd=n("ladjs/i18n options"),Xd=n(")"),Qd=e("code",null,"I18N_AUTO_RELOAD",-1),Zd=n(" - (default: "),$d=e("code",null,"false",-1),ep=n(") - watch for changes in json files to reload locale on updates (see "),np={href:"https://github.com/ladjs/i18n#options",target:"_blank",rel:"noopener noreferrer"},sp=n("ladjs/i18n options"),op=n(")"),tp=e("code",null,"I18N_UPDATE_FILES",-1),ap=n(" - (default: "),rp=e("code",null,"true",-1),ip=n(") - write new locale information to disk (see "),lp={href:"https://github.com/ladjs/i18n#options",target:"_blank",rel:"noopener noreferrer"},cp=n("ladjs/i18n options"),dp=n(")"),pp=e("code",null,"AUTH_LOCAL_ENABLED",-1),hp=n(" - (default: "),_p=e("code",null,"true",-1),up=n(") - enable passport local strategy (see "),bp={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},mp=n("ladjs/passport"),gp=n(")"),fp=e("code",null,"AUTH_FACEBOOK_ENABLED",-1),kp=n(" - (default: "),vp=e("code",null,"false",-1),yp=n(") - enable authenticating with Facebook using the OAuth 2.0 (see "),wp={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},jp=n("ladjs/passport"),Sp=n(")"),Ep=e("code",null,"AUTH_TWITTER_ENABLED",-1),Op=n(" - (default: "),Ap=e("code",null,"false",-1),Tp=n(") - enable authenticating with Twitter using the OAuth 1.0 (see "),xp={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},Ip=n("ladjs/passport"),Rp=n(")"),Np=e("code",null,"AUTH_GOOGLE_ENABLED",-1),Cp=n(" - (default: "),Pp=e("code",null,"false",-1),Lp=n(") - enable authenticating with Google using OAuth 2.0 (see "),Dp={href:"https://github.com/ladjs/lad#google-auth",target:"_blank",rel:"noopener noreferrer"},Gp=n("google auth"),Mp=n(")"),Bp=e("code",null,"AUTH_GITHUB_ENABLED",-1),Wp=n(" - (default: "),qp=e("code",null,"false",-1),Up=n(") - enable authenticating with Github using OAuth 2.0 (see "),Hp={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},Fp=n("ladjs/passport"),Kp=n(")"),zp=e("code",null,"AUTH_LINKEDIN_ENABLED",-1),Vp=n(" - (default: "),Yp=e("code",null,"false",-1),Jp=n(") - enable authenticating with LinkedIn using OAuth 1.0 (see "),Xp={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},Qp=n("ladjs/passport"),Zp=n(")"),$p=e("code",null,"AUTH_INSTAGRAM_ENABLED",-1),eh=n(" - (default: "),nh=e("code",null,"false",-1),sh=n(") - enable authenticating with Instagram using OAuth 2.0 (see "),oh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},th=n("ladjs/passport"),ah=n(")"),rh=e("code",null,"AUTH_OTP_ENABLED",-1),ih=n(" - (default: "),lh=e("code",null,"false",-1),ch=n(") - enable authenticating with OTP, a form of two-factor authentication (see "),dh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},ph=n("ladjs/passport"),hh=n(")"),_h=e("code",null,"AUTH_STRIPE_ENABLED",-1),uh=n(" - (default: false) - enable authenticating with Stripe using OAuth 2.0 (see "),bh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},mh=n("ladjs/passport"),gh=n(")"),fh=e("code",null,"GOOGLE_CLIENT_ID",-1),kh=n(" - google oauth2 client id (see "),vh={href:"https://github.com/ladjs/lad#google-auth",target:"_blank",rel:"noopener noreferrer"},yh=n("google auth"),wh=n(")"),jh=e("code",null,"GOOGLE_CLIENT_SECRET",-1),Sh=n(" - google oauth2 secret (see "),Eh={href:"https://github.com/ladjs/lad#google-auth",target:"_blank",rel:"noopener noreferrer"},Oh=n("google auth"),Ah=n(")"),Th=e("code",null,"GOOGLE_CALLBACK_URL",-1),xh=n(" - google oauth2 callback url (see "),Ih={href:"https://github.com/ladjs/lad#google-auth",target:"_blank",rel:"noopener noreferrer"},Rh=n("google auth"),Nh=n(")"),Ch=e("code",null,"GOOGLE_APPLICATION_CREDENTIALS",-1),Ph=n(" - path to google cloud platform credentials (see "),Lh={href:"https://cloud.google.com/docs/authentication/getting-started",target:"_blank",rel:"noopener noreferrer"},Dh=n("gcp credentials"),Gh=n(")"),Mh=e("code",null,"GITHUB_CLIENT_ID",-1),Bh=n(" - github oauth client id (see "),Wh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},qh=n("ladjs/passport"),Uh=n(")"),Hh=e("code",null,"GITHUB_CLIENT_SECRET",-1),Fh=n(" - github oauth secret (see "),Kh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},zh=n("ladjs/passport"),Vh=n(")"),Yh=e("code",null,"GITHUB_CALLBACK_URL",-1),Jh=n(" - github oauth callback URL (see "),Xh={href:"https://github.com/ladjs/passport",target:"_blank",rel:"noopener noreferrer"},Qh=n("ladjs/passport"),Zh=n(")"),$h=e("code",null,"POSTMARK_API_TOKEN",-1),e_=n(" - postmark api token (see "),n_={href:"https://github.com/ladjs/lad#outbound-email-configuration",target:"_blank",rel:"noopener noreferrer"},s_=n("outbound email configuration"),o_=n(")"),t_=e("code",null,"CODECOV_TOKEN",-1),a_=n(" - codecov api token (see "),r_={href:"https://github.com/ladjs/lad#continuous-integration-and-code-coverage",target:"_blank",rel:"noopener noreferrer"},i_=n("continuous integration and code coverage"),l_=n(")"),c_=t("<li><code>MONGO_USER</code> - mongodb username</li><li><code>MONGO_PASS</code> - mongodb password</li><li><code>MONGO_HOST</code> - (default: <code>localhost</code>) - mongodb hostname</li><li><code>MONGO_PORT</code> - (default: <code>27017</code>) - mongodb port</li>",4),d_=e("code",null,"MONGO_NAME",-1),p_=n(" - (default: "),h_=n(") - mongodb name"),__=e("code",null,"MONGO_URI",-1),u_=n(" - (default: "),b_=n(") - mongodb connection URI"),m_=e("code",null,"WEB_MONGO_USER",-1),g_=n(" - "),f_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},k_=n("ladjs/web"),v_=n(" mongodb username"),y_=e("code",null,"WEB_MONGO_PASS",-1),w_=n(" - "),j_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},S_=n("ladjs/web"),E_=n(" mongodb password"),O_=e("code",null,"WEB_MONGO_HOST",-1),A_=n(" - "),T_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},x_=n("ladjs/web"),I_=n(" mongodb hostname"),R_=e("code",null,"WEB_MONGO_NAME",-1),N_=n(" - "),C_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},P_=n("ladjs/web"),L_=n(" mongodb name"),D_=e("code",null,"WEB_MONGO_PORT",-1),G_=n(" - "),M_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},B_=n("ladjs/web"),W_=n(" mongodb port"),q_=e("code",null,"WEB_MONGO_URI",-1),U_=n(" - "),H_={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},F_=n("ladjs/web"),K_=n(" mongodb connection URI"),z_=e("code",null,"API_MONGO_USER",-1),V_=n(" - "),Y_={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},J_=n("ladjs/api"),X_=n(" mongodb username"),Q_=e("code",null,"API_MONGO_PASS",-1),Z_=n(" - "),$_={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},eu=n("ladjs/api"),nu=n(" mongodb password"),su=e("code",null,"API_MONGO_HOST",-1),ou=n(" - "),tu={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},au=n("ladjs/api"),ru=n(" mongodb hostname"),iu=e("code",null,"API_MONGO_NAME",-1),lu=n(" - "),cu={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},du=n("ladjs/api"),pu=n(" mongodb name"),hu=e("code",null,"API_MONGO_PORT",-1),_u=n(" - "),uu={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},bu=n("ladjs/api"),mu=n(" mongodb port"),gu=e("code",null,"API_MONGO_URI",-1),fu=n(" - "),ku={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},vu=n("ladjs/api"),yu=n(" mongodb connection URI"),wu=e("code",null,"BREE_MONGO_USER",-1),ju=n(" - "),Su={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Eu=n("breejs/bree"),Ou=n(" mongodb username"),Au=e("code",null,"BREE_MONGO_PASS",-1),Tu=n(" - "),xu={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Iu=n("breejs/bree"),Ru=n(" mongodb password"),Nu=e("code",null,"BREE_MONGO_HOST",-1),Cu=n(" - "),Pu={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Lu=n("breejs/bree"),Du=n(" mongodb hostname"),Gu=e("code",null,"BREE_MONGO_NAME",-1),Mu=n(" - "),Bu={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Wu=n("breejs/bree"),qu=n(" mongodb name"),Uu=e("code",null,"BREE_MONGO_PORT",-1),Hu=n(" - "),Fu={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Ku=n("breejs/bree"),zu=n(" mongodb port"),Vu=e("code",null,"BREE_MONGO_URI",-1),Yu=n(" - "),Ju={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Xu=n("breejs/bree"),Qu=n(" mongodb connection URI"),Zu=e("li",null,[e("code",null,"REDIS_PORT"),n(" - (default: "),e("code",null,"6379"),n(") - redis port")],-1),$u=e("li",null,[e("code",null,"REDIS_HOST"),n(" - (default: "),e("code",null,"localhost"),n(") - redis hostname")],-1),eb=e("li",null,[e("code",null,"REDIS_PASSWORD"),n(" - redis password")],-1),nb=e("code",null,"WEB_REDIS_PORT",-1),sb=n(" - "),ob={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},tb=n("ladjs/web"),ab=n(" redis port"),rb=e("code",null,"WEB_REDIS_HOST",-1),ib=n(" - "),lb={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},cb=n("ladjs/web"),db=n(" redis hostname"),pb=e("code",null,"WEB_REDIS_PASSWORD",-1),hb=n(" - "),_b={href:"https://github.com/ladjs/web",target:"_blank",rel:"noopener noreferrer"},ub=n("ladjs/web"),bb=n(" redis password"),mb=e("code",null,"API_REDIS_PORT",-1),gb=n(" - "),fb={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},kb=n("ladjs/api"),vb=n(" redis port"),yb=e("code",null,"API_REDIS_HOST",-1),wb=n(" - "),jb={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},Sb=n("ladjs/api"),Eb=n(" redis hostname"),Ob=e("code",null,"API_REDIS_PASSWORD",-1),Ab=n(" - "),Tb={href:"https://github.com/ladjs/api",target:"_blank",rel:"noopener noreferrer"},xb=n("ladjs/api"),Ib=n(" redis password"),Rb=e("code",null,"BREE_REDIS_PORT",-1),Nb=n(" - "),Cb={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Pb=n("breejs/bree"),Lb=n(" redis port"),Db=e("code",null,"BREE_REDIS_HOST",-1),Gb=n(" - "),Mb={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Bb=n("breejs/bree"),Wb=n(" redis hostname"),qb=e("code",null,"BREE_REDIS_PASSWORD",-1),Ub=n(" - "),Hb={href:"https://github.com/breejs/bree",target:"_blank",rel:"noopener noreferrer"},Fb=n("breejs/bree"),Kb=n(" redis password"),zb=e("code",null,"MANDARIN_REDIS_PORT",-1),Vb=n(" - "),Yb={href:"https://github.com/niftylettuce/mandarin",target:"_blank",rel:"noopener noreferrer"},Jb=n("mandarin"),Xb=n(" redis port"),Qb=e("code",null,"MANDARIN_REDIS_HOST",-1),Zb=n(" - "),$b={href:"https://github.com/niftylettuce/mandarin",target:"_blank",rel:"noopener noreferrer"},em=n("mandarin"),nm=n(" redis hostname"),sm=e("code",null,"MANDARIN_REDIS_PASSWORD",-1),om=n(" - "),tm={href:"https://github.com/niftylettuce/mandarin",target:"_blank",rel:"noopener noreferrer"},am=n("mandarin"),rm=n(" redis password"),im=e("code",null,"CERTBOT_WELL_KNOWN_NAME",-1),lm=n(" - letsencrypt wellknown name (see "),cm={href:"https://certbot.eff.org/docs/using.html#id11",target:"_blank",rel:"noopener noreferrer"},dm=n("certbot options"),pm=n(")"),hm=e("code",null,"CERTBOT_WELL_KNOWN_CONTENTS",-1),_m=n(" - letsencrypt wellknown contents (see "),um={href:"https://certbot.eff.org/docs/using.html#id11",target:"_blank",rel:"noopener noreferrer"},bm=n("certbot options"),mm=n(")"),gm=t("<li><code>VERIFICATION_PIN_TIMEOUT_MS</code> - (default: <code>5m</code>) - email verification pin expiry</li><li><code>VERIFICATION_PIN_EMAIL_INTERVAL_MS</code> - (default: <code>1m</code>) - email verification pin email interval</li><li><code>API_SECRETS</code> - (default: <code>secret</code>) - list of restricted api secrets</li>",3),fm=e("code",null,"CACHE_RESPONSES",-1),km=n(" - (default: "),vm=e("code",null,"false",-1),ym=n(") - cache specified responses (see "),wm={href:"https://github.com/ladjs/koa-cache-responses",target:"_blank",rel:"noopener noreferrer"},jm=n("ladjs/koa-cache-responses"),Sm=n(")"),Em=e("code",null,"SLACK_API_TOKEN",-1),Om=n(" - slack api token (see "),Am={href:"https://slack.dev/node-slack-sdk/web-api",target:"_blank",rel:"noopener noreferrer"},Tm=n("slack web api"),xm=n(")"),Im=t('<h4 id="ssl-configuration" tabindex="-1"><a class="header-anchor" href="#ssl-configuration" aria-hidden="true">#</a> SSL Configuration</h4><p>To configure SSL for the web or API server simply set them in your <code>.env</code> file or pass them as environment variables.</p><blockquote><p>Web server:</p></blockquote><ul><li><code>WEB_PROTOCOL</code> - you must set this to <code>https</code></li><li><code>WEB_SSL_KEY_PATH</code> - file path to your SSL key file (e.g. <code>/home/deploy/.ssl/web-key.pem</code>)</li><li><code>WEB_SSL_CERT_PATH</code> - file path to your SSL certificate file (e.g. <code>/home/deploy/.ssl/web-cert.pem</code>)</li><li><code>WEB_SSL_CA_PATH</code> (optional) - file path to your SSL certificate authority file (e.g. <code>/home/deploy/.ssl/web-ca-cert.pem</code>)</li></ul><blockquote><p>API server:</p></blockquote><ul><li><code>API_PROTOCOL</code> - you must set this to <code>https</code></li><li><code>API_SSL_KEY_PATH</code> - file path to your SSL key file (e.g. <code>/home/deploy/.ssl/api-key.pem</code>)</li><li><code>API_SSL_CERT_PATH</code> - file path to your SSL certificate file (e.g. <code>/home/deploy/.ssl/api-cert.pem</code>)</li><li><code>API_SSL_CA_PATH</code> (optional) - file path to your SSL certificate authority file (e.g. <code>/home/deploy/.ssl/api-ca-cert.pem</code>)</li></ul><h4 id="outbound-email-configuration" tabindex="-1"><a class="header-anchor" href="#outbound-email-configuration" aria-hidden="true">#</a> Outbound Email Configuration</h4><p>By default in the development environment we simply render the email in your browser.</p><p>However in other environments such as production, you definitely want emails to be sent.</p><p>We built-in support for Postmark by default (though you can swap in your own <code>transport</code> provider in the <code>jobs/email.js</code> file):</p>',10),Rm=n("Go to "),Nm={href:"https://postmarkapp.com?utm_source=lad",target:"_blank",rel:"noopener noreferrer"},Cm=n("https://postmarkapp.com"),Pm=n(" \u2013 Start Free Trial"),Lm=t(`<li><p>Create a free trial account, then click Get Started, and proceed to create a &quot;Server&quot; and &quot;Sender Signature&quot;</p></li><li><p>Copy/paste the &quot;Server API token&quot; under &quot;Credentials&quot; in your <code>.env</code> file (example below)</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">POSTMARK_API_TOKEN=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">POSTMARK_API_TOKEN=ac6657eb-2732-4cfd-915b-912b1b10beb1
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Modify the <code>SEND_EMAIL</code> variable in <code>.env</code> from <code>false</code> to <code>true</code></p></li>`,3),Dm=e("h4",{id:"favicon-and-touch-icon-configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#favicon-and-touch-icon-configuration","aria-hidden":"true"},"#"),n(" Favicon and Touch Icon Configuration")],-1),Gm=n("You can customize the favicon and touch icons \u2013 just generate a new set at "),Mm={href:"https://realfavicongenerator.net",target:"_blank",rel:"noopener noreferrer"},Bm=n("https://realfavicongenerator.net"),Wm=n(" and overwrite the existing in the "),qm=e("a",{href:"template/assets"},"assets",-1),Um=n(" folder."),Hm=e("p",null,[n("Just make sure that any relative paths match up in the "),e("code",null,"assets/browserconfig.xml"),n(" and "),e("code",null,"assets/manifest.json"),n(" files.")],-1),Fm=e("h4",{id:"authentication-methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#authentication-methods","aria-hidden":"true"},"#"),n(" Authentication Methods")],-1),Km=n("We use Lad's auth package under the hood; so if you want to configure authentication providers you'll want to read more or contribute to "),zm={href:"https://github.com/ladjs/auth",target:"_blank",rel:"noopener noreferrer"},Vm=n("@ladjs/auth"),Ym=n("."),Jm=e("h5",{id:"google-auth",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#google-auth","aria-hidden":"true"},"#"),n(" Google Auth")],-1),Xm=e("p",null,"In order to add Google sign-in to your app (so users can log in with their Google account):",-1),Qm=n("Go to "),Zm={href:"https://console.developers.google.com",target:"_blank",rel:"noopener noreferrer"},$m=n("https://console.developers.google.com"),eg=n(" \u2013 Create a project (and fill out your project information \u2013 if you need a 120x120px default image, "),ng={href:"https://cdn.rawgit.com/ladjs/lad/82d38d64/media/lad-120x120.png",target:"_blank",rel:"noopener noreferrer"},sg=n("you can use this one"),og=n(" with a CDN path of "),tg={href:"https://cdn.rawgit.com/ladjs/lad/82d38d64/media/lad-120x120.png",target:"_blank",rel:"noopener noreferrer"},ag=n("https://cdn.rawgit.com/ladjs/lad/82d38d64/media/lad-120x120.png"),rg=t(`<li><p>Under your newly created project, go to Credentials \u2013 Create credentials \u2013 OAuth client ID \u2013 Web application</p></li><li><p>Set &quot;Authorized JavaScript origins&quot; to <code>http://yourdomain.com</code> (replace with your domain) and also <code>http://localhost:3000</code> (for local development)</p></li><li><p>Set &quot;Authorized redirect URIs&quot; to <code>http://yourdomain.com/auth/google/ok</code> (again, replace with your domain) and also <code>http://localhost:3000/auth/google/ok</code> (again, for local development)</p></li><li><p>Copy and paste the newly created key pair for respective properties in your <code>.env</code> file (example below)</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">GOOGLE_CLIENT_ID=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">GOOGLE_CLIENT_ID=424623312719-73vn8vb4tmh8nht96q7vdbn3mc9pd63a.apps.googleusercontent.com
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">GOOGLE_CLIENT_SECRET=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">GOOGLE_CLIENT_SECRET=Oys6WrHleTOksqXTbEY_yi07
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>In <code>.env</code>, make sure that <code>AUTH_GOOGLE_ENABLED=true</code> to enable this authentication method.</p></li>`,5),ig=e("h4",{id:"translation-configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#translation-configuration","aria-hidden":"true"},"#"),n(" Translation Configuration")],-1),lg=n("Go to "),cg={href:"https://console.developers.google.com",target:"_blank",rel:"noopener noreferrer"},dg=n("https://console.developers.google.com"),pg=e("li",null,"Enable the Google Translate API",-1),hg=e("li",null,[n("Copy your API key and set it as the environment variable "),e("code",null,"GOOGLE_TRANSLATE_KEY=******")],-1),_g=e("h4",{id:"continuous-integration-and-code-coverage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#continuous-integration-and-code-coverage","aria-hidden":"true"},"#"),n(" Continuous Integration and Code Coverage")],-1),ug=n("We strongly recommend that you use "),bg={href:"https://semaphoreci.com/?ref=lad",target:"_blank",rel:"noopener noreferrer"},mg=n("SemaphoreCI"),gg=n(" for continuous integration and "),fg={href:"https://codecov.io/gh",target:"_blank",rel:"noopener noreferrer"},kg=n("Codecov"),vg=n(" for code coverage."),yg=n("Here are the simple steps required to setup "),wg={href:"https://semaphoreci.com/?ref=lad",target:"_blank",rel:"noopener noreferrer"},jg=n("SemaphoreCI"),Sg=n(" with "),Eg={href:"https://codecov.io/gh",target:"_blank",rel:"noopener noreferrer"},Og=n("Codecov"),Ag=n(":"),Tg=n("Go to "),xg={href:"https://semaphoreci.com/?ref=lad",target:"_blank",rel:"noopener noreferrer"},Ig=n("SemaphoreCI"),Rg=n(" and sign up for a free account"),Ng=e("li",null,[e("p",null,"Once your repository is pushed to GitHub, add it as a project on SemaphoreCI")],-1),Cg=e("p",null,"Configure your project on SemaphoreCI with the following build settings:",-1),Pg=n("Replace "),Lg=e("code",null,"npm",-1),Dg=n(" with "),Gg=e("code",null,"yarn",-1),Mg=n(" if you're using "),Bg={href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},Wg=n("yarn"),qg=n(" as your package manager"),Ug=t("<ul><li>Language: <code>JavaScript</code></li><li>Node.js version: <code>10+</code> (latest LTS) <blockquote><p>Note you can also add to <code>Setup</code> the script <code>nvm install latest</code> to install latest version if SemaphoreCI does not provide it from the drop-down</p></blockquote></li><li>Setup: <code>npm install</code></li><li>Job 1: <code>npm run test-coverage</code></li><li>After job: <code>npm run coverage</code></li></ul>",1),Hg=n("Go to "),Fg={href:"https://codecov.io/gh",target:"_blank",rel:"noopener noreferrer"},Kg=n("Codecov"),zg=n(" and sign up for a free account"),Vg=e("li",null,[e("p",null,"Add your project on Codecov and copy to your clipboard the token")],-1),Yg=e("li",null,[e("p",null,[n("Go to SemaphoreCI's Project Settings for your project and add "),e("code",null,"CODECOV_TOKEN"),n(" as an environment variable (with the contents from your clipboard)")])],-1),Jg=e("li",null,[e("p",null,'Run a test build ("Rebuild last revision") on SemaphoreCI and check to make sure your code coverage report uploads properly on Codecov')],-1),Xg=e("li",null,[e("p",null,[n("Ensure your "),e("code",null,"README.md"),n(" file has the build status and code coverage badges rendered properly (you will need to use a different badge link from each provider if your GitHub repository is private)")])],-1),Qg=e("h4",{id:"amazon-s3-and-cloudfront-asset-setup",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#amazon-s3-and-cloudfront-asset-setup","aria-hidden":"true"},"#"),n(" Amazon S3 and CloudFront Asset Setup")],-1),Zg=e("p",null,"In order for your assets to get properly served in a production environment, you'll need to configure AWS:",-1),$g=n("Go to "),ef={href:"https://console.aws.amazon.com/iam/home#security_credential",target:"_blank",rel:"noopener noreferrer"},nf=n("https://console.aws.amazon.com/iam/home#security_credential"),sf=n(" \u2010 Access Keys \u2013 Create New Access Key"),of=t(`<li><p>Copy and paste the newly created key pair for respective properties in your <code>.env</code> file (example below)</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">AWS_IAM_KEY=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">AWS_IAM_KEY=AKIAJMH22P6W674YFC7Q
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">AWS_IAM_SECRET=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">AWS_IAM_SECRET=9MpR1FOXwPEtPlrlU5WbHjnz2KDcKWSUcB+C5CpS
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>Enable your API by clicking on Overview and then clicking the Enable button</p></li>`,2),tf=n("Go to "),af={href:"https://console.aws.amazon.com/s3/home",target:"_blank",rel:"noopener noreferrer"},rf=n("https://console.aws.amazon.com/s3/home"),lf=n(" \u2013 Create Bucket"),cf=t(`<li><p>Create a bucket and copy/paste its name for the property in <code>.env</code> (example below)</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">AWS_S3_BUCKET=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">AWS_S3_BUCKET=lad-development
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>`,1),df=n("Go to "),pf={href:"https://console.aws.amazon.com/cloudfront/home",target:"_blank",rel:"noopener noreferrer"},hf=n("https://console.aws.amazon.com/cloudfront/home"),_f=n(" \u2013 Create Distribution \u2013 Get Started"),uf=t(`<li><p>Set &quot;Origin Domain Name&quot; equal to your S3 bucket name (their autocomplete drop-down will help you find it)</p></li><li><p>Leave the remaining defaults as is (some fields might be blank, this is OK)</p></li><li><p>Copy/paste the newly created Distribution ID and Domain Name for respective properties in your <code>.env</code> file (example below)</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">AWS_CF_DI=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">AWS_CF_DI=E2IBEULE9QOPVE
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">AWS_CF_DOMAIN=
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">AWS_CF_DOMAIN=d36aditw73gdrz.cloudfront.net
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>`,3),bf=e("h3",{id:"tutorials",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tutorials","aria-hidden":"true"},"#"),n(" Tutorials")],-1),mf={href:"https://github.com/koajs/koa#getting-started",target:"_blank",rel:"noopener noreferrer"},gf=n("Writing Your App"),ff={href:"http://niftylettuce.com/posts/automated-node-app-ci-graceful-zerodowntime-github-pm2/",target:"_blank",rel:"noopener noreferrer"},kf=n("Continous Integration and Deployment"),vf=e("h3",{id:"community",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#community","aria-hidden":"true"},"#"),n(" Community")],-1),yf={href:"https://twitter.com/niftylettuce",target:"_blank",rel:"noopener noreferrer"},wf=n("Follow us on Twitter"),jf={href:"https://join.slack.com/t/ladjs/shared_invite/zt-fqei6z11-Bq2trhwHQxVc5x~ifiZG0g/",target:"_blank",rel:"noopener noreferrer"},Sf=n("Join our Slack channel"),Ef={href:"https://www.twitch.tv/niftylettuce",target:"_blank",rel:"noopener noreferrer"},Of=n("Subscribe to our Twitch channel"),Af={href:"https://github.com/koajs/koa#community",target:"_blank",rel:"noopener noreferrer"},Tf=n("Visit Koa's Community section"),xf=n("."),If={href:"http://slack.mongoosejs.io/",target:"_blank",rel:"noopener noreferrer"},Rf=n("Join Mongoose's Slack channel"),Nf=t(`<h2 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture" aria-hidden="true">#</a> Architecture</h2><p>The following bash output is the directory structure and organization of Lad:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tree template -I <span class="token string">&quot;build|node_modules|coverage|test&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>template
\u251C\u2500\u2500 LICENSE
\u251C\u2500\u2500 README
\u251C\u2500\u2500 ansible
\u2502   \u251C\u2500\u2500 playbooks
\u2502   \u2502   \u251C\u2500\u2500 aws-credentials.yml
\u2502   \u2502   \u251C\u2500\u2500 bree.yml
\u2502   \u2502   \u251C\u2500\u2500 certificates.yml
\u2502   \u2502   \u251C\u2500\u2500 deployment-keys.yml
\u2502   \u2502   \u251C\u2500\u2500 ecosystem.yml
\u2502   \u2502   \u251C\u2500\u2500 env.yml
\u2502   \u2502   \u251C\u2500\u2500 gapp-creds.yml
\u2502   \u2502   \u251C\u2500\u2500 http.yml
\u2502   \u2502   \u251C\u2500\u2500 mongo.yml
\u2502   \u2502   \u251C\u2500\u2500 node.yml
\u2502   \u2502   \u251C\u2500\u2500 python.yml
\u2502   \u2502   \u251C\u2500\u2500 redis.yml
\u2502   \u2502   \u251C\u2500\u2500 security.yml
\u2502   \u2502   \u251C\u2500\u2500 ssh-keys.yml
\u2502   \u2502   \u2514\u2500\u2500 templates
\u2502   \u2502       \u251C\u2500\u2500 aws-credentials.j2
\u2502   \u2502       \u251C\u2500\u2500 before.rules.j2
\u2502   \u2502       \u251C\u2500\u2500 ecosystem-api.json.j2
\u2502   \u2502       \u251C\u2500\u2500 ecosystem-bree.json.j2
\u2502   \u2502       \u251C\u2500\u2500 ecosystem-web.json.j2
\u2502   \u2502       \u251C\u2500\u2500 <span class="token function">env</span>
\u2502   \u2502       \u251C\u2500\u2500 hosts.yml
\u2502   \u2502       \u2514\u2500\u2500 security-limits.d-mongod.conf
\u2502   \u2514\u2500\u2500 requirements.yml
\u251C\u2500\u2500 ansible-playbook.js
\u251C\u2500\u2500 ansible.cfg
\u251C\u2500\u2500 api.js
\u251C\u2500\u2500 app
\u2502   \u251C\u2500\u2500 controllers
\u2502   \u2502   \u251C\u2500\u2500 api
\u2502   \u2502   \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502   \u2502   \u2514\u2500\u2500 v1
\u2502   \u2502   \u2502       \u251C\u2500\u2500 index.js
\u2502   \u2502   \u2502       \u251C\u2500\u2500 log.js
\u2502   \u2502   \u2502       \u2514\u2500\u2500 users.js
\u2502   \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502   \u2514\u2500\u2500 web
\u2502   \u2502       \u251C\u2500\u2500 admin
\u2502   \u2502       \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502       \u2502   \u2514\u2500\u2500 users.js
\u2502   \u2502       \u251C\u2500\u2500 auth.js
\u2502   \u2502       \u251C\u2500\u2500 index.js
\u2502   \u2502       \u251C\u2500\u2500 my-account.js
\u2502   \u2502       \u251C\u2500\u2500 otp
\u2502   \u2502       \u2502   \u251C\u2500\u2500 disable.js
\u2502   \u2502       \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502       \u2502   \u251C\u2500\u2500 keys.js
\u2502   \u2502       \u2502   \u251C\u2500\u2500 recovery.js
\u2502   \u2502       \u2502   \u2514\u2500\u2500 setup.js
\u2502   \u2502       \u251C\u2500\u2500 report.js
\u2502   \u2502       \u2514\u2500\u2500 support.js
\u2502   \u251C\u2500\u2500 models
\u2502   \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502   \u251C\u2500\u2500 inquiry.js
\u2502   \u2502   \u2514\u2500\u2500 user.js
\u2502   \u2514\u2500\u2500 views
\u2502       \u251C\u2500\u2500 <span class="token number">404</span>.pug
\u2502       \u251C\u2500\u2500 <span class="token number">500</span>.pug
\u2502       \u251C\u2500\u2500 _breadcrumbs.pug
\u2502       \u251C\u2500\u2500 _footer.pug
\u2502       \u251C\u2500\u2500 _nav.pug
\u2502       \u251C\u2500\u2500 _pagination.pug
\u2502       \u251C\u2500\u2500 _register-or-login.pug
\u2502       \u251C\u2500\u2500 about.pug
\u2502       \u251C\u2500\u2500 admin
\u2502       \u2502   \u251C\u2500\u2500 index.pug
\u2502       \u2502   \u2514\u2500\u2500 <span class="token function">users</span>
\u2502       \u2502       \u251C\u2500\u2500 index.pug
\u2502       \u2502       \u2514\u2500\u2500 retrieve.pug
\u2502       \u251C\u2500\u2500 change-email.pug
\u2502       \u251C\u2500\u2500 dashboard
\u2502       \u2502   \u2514\u2500\u2500 index.pug
\u2502       \u251C\u2500\u2500 donate.pug
\u2502       \u251C\u2500\u2500 forgot-password.pug
\u2502       \u251C\u2500\u2500 home.pug
\u2502       \u251C\u2500\u2500 layout.pug
\u2502       \u251C\u2500\u2500 my-account
\u2502       \u2502   \u251C\u2500\u2500 index.pug
\u2502       \u2502   \u251C\u2500\u2500 profile.pug
\u2502       \u2502   \u2514\u2500\u2500 security.pug
\u2502       \u251C\u2500\u2500 otp
\u2502       \u2502   \u251C\u2500\u2500 enable.pug
\u2502       \u2502   \u251C\u2500\u2500 keys.pug
\u2502       \u2502   \u251C\u2500\u2500 login.pug
\u2502       \u2502   \u2514\u2500\u2500 setup.pug
\u2502       \u251C\u2500\u2500 privacy.pug
\u2502       \u251C\u2500\u2500 register-or-login.pug
\u2502       \u251C\u2500\u2500 reset-password.pug
\u2502       \u251C\u2500\u2500 spinner
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">1</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">10</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">11</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">2</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">3</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">4</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">5</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">6</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">7</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">8</span>.pug
\u2502       \u2502   \u251C\u2500\u2500 <span class="token number">9</span>.pug
\u2502       \u2502   \u2514\u2500\u2500 spinner.pug
\u2502       \u251C\u2500\u2500 support.pug
\u2502       \u251C\u2500\u2500 terms.pug
\u2502       \u2514\u2500\u2500 verify.pug
\u251C\u2500\u2500 assets
\u2502   \u251C\u2500\u2500 browserconfig.xml
\u2502   \u251C\u2500\u2500 css
\u2502   \u2502   \u251C\u2500\u2500 _btn-auth.scss
\u2502   \u2502   \u251C\u2500\u2500 _custom.scss
\u2502   \u2502   \u251C\u2500\u2500 _email.scss
\u2502   \u2502   \u251C\u2500\u2500 _markdown.scss
\u2502   \u2502   \u251C\u2500\u2500 _responsive-backgrounds.scss
\u2502   \u2502   \u251C\u2500\u2500 _responsive-borders.scss
\u2502   \u2502   \u251C\u2500\u2500 _responsive-rounded.scss
\u2502   \u2502   \u251C\u2500\u2500 _swal2.scss
\u2502   \u2502   \u251C\u2500\u2500 _variables.scss
\u2502   \u2502   \u2514\u2500\u2500 app.scss
\u2502   \u251C\u2500\u2500 fonts
\u2502   \u251C\u2500\u2500 img
\u2502   \u2502   \u251C\u2500\u2500 android-chrome-192x192.png
\u2502   \u2502   \u251C\u2500\u2500 android-chrome-384x384.png
\u2502   \u2502   \u251C\u2500\u2500 apple-touch-icon.png
\u2502   \u2502   \u251C\u2500\u2500 favicon-16x16.png
\u2502   \u2502   \u251C\u2500\u2500 favicon-32x32.png
\u2502   \u2502   \u251C\u2500\u2500 favicon.ico
\u2502   \u2502   \u251C\u2500\u2500 github-logo.svg
\u2502   \u2502   \u251C\u2500\u2500 google-logo.svg
\u2502   \u2502   \u251C\u2500\u2500 logo-square.svg
\u2502   \u2502   \u251C\u2500\u2500 mstile-150x150.png
\u2502   \u2502   \u251C\u2500\u2500 social.png
\u2502   \u2502   \u2514\u2500\u2500 twitter.png
\u2502   \u251C\u2500\u2500 js
\u2502   \u2502   \u251C\u2500\u2500 core.js
\u2502   \u2502   \u251C\u2500\u2500 logger.js
\u2502   \u2502   \u2514\u2500\u2500 uncaught.js
\u2502   \u251C\u2500\u2500 robots.txt
\u2502   \u2514\u2500\u2500 site.webmanifest
\u251C\u2500\u2500 bree.js
\u251C\u2500\u2500 config
\u2502   \u251C\u2500\u2500 api.js
\u2502   \u251C\u2500\u2500 bree.js
\u2502   \u251C\u2500\u2500 cookies.js
\u2502   \u251C\u2500\u2500 env.js
\u2502   \u251C\u2500\u2500 filters.js
\u2502   \u251C\u2500\u2500 i18n.js
\u2502   \u251C\u2500\u2500 index.js
\u2502   \u251C\u2500\u2500 koa-cash.js
\u2502   \u251C\u2500\u2500 locales.js
\u2502   \u251C\u2500\u2500 logger.js
\u2502   \u251C\u2500\u2500 meta.js
\u2502   \u251C\u2500\u2500 phrases.js
\u2502   \u251C\u2500\u2500 utilities.js
\u2502   \u2514\u2500\u2500 web.js
\u251C\u2500\u2500 emails
\u2502   \u251C\u2500\u2500 _content.pug
\u2502   \u251C\u2500\u2500 _footer.pug
\u2502   \u251C\u2500\u2500 _nav.pug
\u2502   \u251C\u2500\u2500 account-update
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 change-email
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 inquiry
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 layout.pug
\u2502   \u251C\u2500\u2500 recovery
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 reset-password
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 two-factor-reminder
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u251C\u2500\u2500 verify
\u2502   \u2502   \u251C\u2500\u2500 html.pug
\u2502   \u2502   \u2514\u2500\u2500 subject.pug
\u2502   \u2514\u2500\u2500 welcome
\u2502       \u251C\u2500\u2500 html.pug
\u2502       \u2514\u2500\u2500 subject.pug
\u251C\u2500\u2500 <span class="token function">env</span>
\u251C\u2500\u2500 gitignore
\u251C\u2500\u2500 gulpfile.js
\u251C\u2500\u2500 helpers
\u2502   \u251C\u2500\u2500 email.js
\u2502   \u251C\u2500\u2500 get-email-locals.js
\u2502   \u251C\u2500\u2500 i18n.js
\u2502   \u251C\u2500\u2500 logger.js
\u2502   \u251C\u2500\u2500 markdown.js
\u2502   \u251C\u2500\u2500 passport.js
\u2502   \u251C\u2500\u2500 policies.js
\u2502   \u251C\u2500\u2500 send-verification-email.js
\u2502   \u2514\u2500\u2500 to-object.js
\u251C\u2500\u2500 index.js
\u251C\u2500\u2500 <span class="token function">jobs</span>
\u2502   \u251C\u2500\u2500 account-updates.js
\u2502   \u251C\u2500\u2500 index.js
\u2502   \u251C\u2500\u2500 translate-markdown.js
\u2502   \u251C\u2500\u2500 translate-phrases.js
\u2502   \u251C\u2500\u2500 two-factor-reminder.js
\u2502   \u2514\u2500\u2500 welcome-email.js
\u251C\u2500\u2500 lad.sh
\u251C\u2500\u2500 locales
\u2502   \u251C\u2500\u2500 ar.json
\u2502   \u251C\u2500\u2500 cs.json
\u2502   \u251C\u2500\u2500 da.json
\u2502   \u251C\u2500\u2500 de.json
\u2502   \u251C\u2500\u2500 en.json
\u2502   \u251C\u2500\u2500 es.json
\u2502   \u251C\u2500\u2500 fi.json
\u2502   \u251C\u2500\u2500 fr.json
\u2502   \u251C\u2500\u2500 he.json
\u2502   \u251C\u2500\u2500 hu.json
\u2502   \u251C\u2500\u2500 id.json
\u2502   \u251C\u2500\u2500 it.json
\u2502   \u251C\u2500\u2500 ja.json
\u2502   \u251C\u2500\u2500 ko.json
\u2502   \u251C\u2500\u2500 nl.json
\u2502   \u251C\u2500\u2500 no.json
\u2502   \u251C\u2500\u2500 pl.json
\u2502   \u251C\u2500\u2500 pt.json
\u2502   \u251C\u2500\u2500 ru.json
\u2502   \u251C\u2500\u2500 sv.json
\u2502   \u251C\u2500\u2500 th.json
\u2502   \u251C\u2500\u2500 tr.json
\u2502   \u251C\u2500\u2500 uk.json
\u2502   \u251C\u2500\u2500 vi.json
\u2502   \u2514\u2500\u2500 zh.json
\u251C\u2500\u2500 nodemon.json
\u251C\u2500\u2500 package-scripts.js
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 proxy.js
\u251C\u2500\u2500 routes
\u2502   \u251C\u2500\u2500 api
\u2502   \u2502   \u251C\u2500\u2500 index.js
\u2502   \u2502   \u2514\u2500\u2500 v1
\u2502   \u2502       \u2514\u2500\u2500 index.js
\u2502   \u251C\u2500\u2500 index.js
\u2502   \u2514\u2500\u2500 web
\u2502       \u251C\u2500\u2500 admin.js
\u2502       \u251C\u2500\u2500 auth.js
\u2502       \u251C\u2500\u2500 index.js
\u2502       \u251C\u2500\u2500 my-account.js
\u2502       \u2514\u2500\u2500 otp.js
\u251C\u2500\u2500 template
\u251C\u2500\u2500 web.js
\u251C\u2500\u2500 yarn-error.log
\u2514\u2500\u2500 yarn.lock

<span class="token number">42</span> directories, <span class="token number">212</span> files
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br></div></div><h2 id="principles" tabindex="-1"><a class="header-anchor" href="#principles" aria-hidden="true">#</a> Principles</h2><p>Lad is designed according to these principles:</p>`,6),Cf=e("li",null,"Always be developer-friendly",-1),Pf=n("Adhere to "),Lf={href:"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller",target:"_blank",rel:"noopener noreferrer"},Df=n("MVC"),Gf=n(", "),Mf={href:"https://en.wikipedia.org/wiki/Unix_philosophy",target:"_blank",rel:"noopener noreferrer"},Bf=n("Unix"),Wf=n(", "),qf={href:"https://en.wikipedia.org/wiki/KISS_principle",target:"_blank",rel:"noopener noreferrer"},Uf=n("KISS"),Hf=n(", "),Ff={href:"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",target:"_blank",rel:"noopener noreferrer"},Kf=n("DRY"),zf=n(", "),Vf={href:"https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it",target:"_blank",rel:"noopener noreferrer"},Yf=n("YAGNI"),Jf=n(", "),Xf={href:"https://12factor.net/",target:"_blank",rel:"noopener noreferrer"},Qf=n("Twelve Factor"),Zf=n(", "),$f={href:"https://en.wikipedia.org/wiki/Occam%27s_razor",target:"_blank",rel:"noopener noreferrer"},e1=n("Occam's razor"),n1=n(", and "),s1={href:"https://en.wikipedia.org/wiki/Eating_your_own_dog_food",target:"_blank",rel:"noopener noreferrer"},o1=n("dogfooding"),t1=n("Target the scrappy, bootstrapped, and "),a1={href:"http://www.paulgraham.com/ramenprofitable.html",target:"_blank",rel:"noopener noreferrer"},r1=n("ramen-profitable"),i1=n(" hacker"),l1=e("h2",{id:"related",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#related","aria-hidden":"true"},"#"),n(" Related")],-1),c1={href:"https://lipo.io",target:"_blank",rel:"noopener noreferrer"},d1=n("lipo"),p1=n(" - Free image manipulation API service built on top of "),h1={href:"http://sharp.dimens.io/",target:"_blank",rel:"noopener noreferrer"},_1=n("Sharp"),u1={href:"http://cabinjs.com",target:"_blank",rel:"noopener noreferrer"},b1=n("cabin"),m1=n(" - Logging and analytics solution for "),g1={href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},f1=n("Node.js"),k1=n(", "),v1={href:"https://lad.js.org",target:"_blank",rel:"noopener noreferrer"},y1=n("Lad"),w1=n(", "),j1={href:"http://koajs.com/",target:"_blank",rel:"noopener noreferrer"},S1=n("Koa"),E1=n(", and "),O1={href:"https://expressjs.com",target:"_blank",rel:"noopener noreferrer"},A1=n("Express"),T1={href:"https://lass.js.org",target:"_blank",rel:"noopener noreferrer"},x1=n("lass"),I1=n(" - Scaffold a modern boilerplate for "),R1={href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"},N1=n("Node.js"),C1=t(`<h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing" aria-hidden="true">#</a> Contributing</h2><p>Interesting in contributing to this project or testing early releases?</p><ol><li><p>Follow all of the above <a href="#requirements">Requirements</a></p></li><li><p>You will need to fork and clone this repository locally</p></li><li><p>After forking, follow these steps:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> lad
<span class="token function">yarn</span> <span class="token function">install</span>
<span class="token builtin class-name">cd</span> template
<span class="token function">yarn</span> <span class="token function">install</span>
<span class="token function">yarn</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><p>If you&#39;d like to preview changes to the <code>README.md</code> file, you can use <code>docute</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">add</span> docute-cli
<span class="token builtin class-name">cd</span> lad
docute ./
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,5),P1=n("Then visit "),L1={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},D1=n("http://localhost:8080"),G1=n(" in your browser."),M1=e("h2",{id:"contributors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributors","aria-hidden":"true"},"#"),n(" Contributors")],-1),B1=e("thead",null,[e("tr",null,[e("th",null,"Name"),e("th",null,"Website")])],-1),W1=e("td",null,[e("strong",null,"Nick Baugh")],-1),q1={href:"http://niftylettuce.com",target:"_blank",rel:"noopener noreferrer"},U1=n("http://niftylettuce.com"),H1=e("td",null,[e("strong",null,"Shaun Warman")],-1),F1={href:"https://shaunwarman.com/",target:"_blank",rel:"noopener noreferrer"},K1=n("https://shaunwarman.com/"),z1=t('<h2 id="trademark-notice" tabindex="-1"><a class="header-anchor" href="#trademark-notice" aria-hidden="true">#</a> Trademark Notice</h2><p>Lad, Lass, Cabin, Lipo, and their respective logos are trademarks of Niftylettuce LLC. These trademarks may not be reproduced, distributed, transmitted, or otherwise used, except with the prior written permission of Niftylettuce LLC. If you are seeking permission to use these trademarks, then please <a href="mailto:niftylettuce@gmail.com">contact us</a>.</p><h2 id="license" tabindex="-1"><a class="header-anchor" href="#license" aria-hidden="true">#</a> License</h2>',3),V1=e("a",{href:"LICENSE"},"MIT",-1),Y1=n(" \xA9 "),J1={href:"http://niftylettuce.com",target:"_blank",rel:"noopener noreferrer"},X1=n("Nick Baugh"),Q1=e("h2",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),Z1=e("p",null,[e("a",{href:"#"},[e("img",{src:"https://lad.js.org/media/lad-footer.png",alt:"#"})])],-1);function $1(a,ek){const o=i("ExternalLinkIcon"),l=i("RouterLink");return d(),p(_,null,[b,e("ul",null,[e("li",null,[m,e("a",g,[f,s(o)]),k,e("a",v,[y,s(o)]),w,j,S]),e("li",null,[e("a",E,[O,s(o)]),A,e("a",T,[x,s(o)]),I,e("a",R,[N,s(o)]),C,e("a",P,[L,s(o)]),D,e("a",G,[M,s(o)]),B,e("a",W,[q,s(o)]),U]),e("li",null,[e("a",H,[F,s(o)]),K]),e("li",null,[e("a",z,[V,s(o)])]),e("li",null,[e("a",Y,[J,s(o)]),X,e("a",Q,[Z,s(o)]),$,e("a",ee,[ne,s(o)]),se,e("a",oe,[te,s(o)]),ae,e("a",re,[ie,s(o)]),le,e("a",ce,[de,s(o)]),pe]),e("li",null,[e("a",he,[_e,s(o)])]),e("li",null,[e("a",ue,[be,s(o)])]),e("li",null,[e("a",me,[ge,s(o)])]),e("li",null,[e("a",fe,[ke,s(o)])]),e("li",null,[e("a",ve,[ye,s(o)])]),e("li",null,[e("a",we,[je,s(o)])]),e("li",null,[e("a",Se,[Ee,s(o)])]),Oe]),Ae,e("ul",null,[e("li",null,[Te,e("a",xe,[Ie,s(o)]),Re,e("a",Ne,[Ce,s(o)]),Pe,e("a",Le,[De,s(o)]),Ge,e("a",Me,[Be,s(o)]),We]),qe,e("li",null,[Ue,e("a",He,[Fe,s(o)]),Ke]),ze,e("li",null,[Ve,e("a",Ye,[Je,s(o)]),Xe,e("a",Qe,[Ze,s(o)]),$e]),en,nn,sn,e("li",null,[on,e("a",tn,[an,s(o)]),rn]),ln,cn,dn,pn,hn]),_n,un,e("ul",null,[e("li",null,[bn,e("a",mn,[gn,s(o)])]),fn,kn,vn,yn,wn,jn]),Sn,e("p",null,[En,e("a",On,[An,s(o)]),Tn]),e("ul",null,[xn,In,e("li",null,[Rn,e("a",Nn,[Cn,s(o)]),Pn]),Ln,Dn,e("li",null,[e("a",Gn,[Mn,s(o)])]),e("li",null,[e("a",Bn,[Wn,s(o)])]),e("li",null,[e("a",qn,[Un,s(o)])]),Hn,Fn,Kn]),zn,Vn,e("ul",null,[Yn,e("li",null,[e("a",Jn,[Xn,s(o)])]),e("li",null,[e("a",Qn,[Zn,s(o)])]),$n]),e("p",null,[es,e("a",ns,[ss,s(o)]),os]),ts,e("ul",null,[as,rs,e("li",null,[is,e("a",ls,[cs,s(o)]),ds,e("a",ps,[hs,s(o)]),_s]),us,bs,ms,gs]),fs,ks,vs,ys,e("ul",null,[e("li",null,[e("p",null,[e("a",ws,[js,s(o)]),Ss,e("a",Es,[Os,s(o)]),As])]),e("li",null,[e("p",null,[e("a",Ts,[xs,s(o)]),Is,e("a",Rs,[Ns,s(o)]),Cs]),e("ul",null,[Ps,e("li",null,[Ls,e("a",Ds,[Gs,s(o)]),Ms,e("a",Bs,[Ws,s(o)])])])]),e("li",null,[e("p",null,[e("a",qs,[Us,s(o)]),Hs]),e("ul",null,[e("li",null,[e("p",null,[Fs,e("a",Ks,[zs,s(o)]),Vs,Ys,Js])]),Xs])]),e("li",null,[e("p",null,[e("a",Qs,[Zs,s(o)]),$s]),e("ul",null,[e("li",null,[e("p",null,[eo,e("a",no,[so,s(o)]),oo,to])]),ao])])]),ro,e("p",null,[e("a",io,[lo,s(o)]),co]),po,e("p",null,[e("a",ho,[_o,s(o)]),uo]),bo,e("p",null,[mo,go,fo,e("a",ko,[vo,s(o)]),yo,e("a",wo,[jo,s(o)]),So]),Eo,e("p",null,[Oo,e("a",Ao,[To,s(o)]),xo]),e("p",null,[e("a",Io,[Ro,s(o)]),No]),Co,e("p",null,[e("a",Po,[Lo,s(o)]),Do]),Go,e("ul",null,[e("li",null,[e("p",null,[Mo,Bo,e("a",Wo,[qo,s(o)]),Uo]),Ho]),e("li",null,[e("p",null,[Fo,Ko,e("a",zo,[Vo,s(o)]),Yo]),Jo]),Xo,e("li",null,[e("p",null,[Qo,Zo,$o,et,e("a",nt,[st,s(o)]),ot,tt,at,rt,it]),lt]),e("li",null,[e("p",null,[ct,dt,e("a",pt,[ht,s(o)]),_t,e("a",ut,[bt,s(o)]),mt]),gt])]),ft,e("p",null,[kt,e("a",vt,[yt,s(o)]),wt,e("a",jt,[St,s(o)]),Et,e("a",Ot,[At,s(o)]),Tt]),e("ol",null,[e("li",null,[e("p",null,[xt,It,Rt,e("a",Nt,[Ct,s(o)]),Pt])]),e("li",null,[e("p",null,[Lt,Dt,Gt,Mt,Bt,Wt,qt,Ut,Ht,e("a",Ft,[Kt,s(o)]),zt])]),e("li",null,[e("p",null,[Vt,e("a",Yt,[Jt,s(o)]),Xt,e("a",Qt,[Zt,s(o)]),$t,e("a",ea,[na,s(o)]),sa]),oa]),ta]),aa,e("p",null,[ra,s(l,{to:"/en/ansible/"},{default:h(()=>[ia]),_:1}),la,e("a",ca,[da,s(o)]),pa]),e("p",null,[ha,e("a",_a,[ua,s(o)]),ba,e("a",ma,[ga,s(o)]),fa]),e("p",null,[ka,e("a",va,[ya,s(o)]),wa]),e("p",null,[ja,e("a",Sa,[Ea,s(o)]),Oa,e("a",Aa,[Ta,s(o)]),xa,e("a",Ia,[Ra,s(o)]),Na]),Ca,Pa,e("ol",null,[La,e("li",null,[e("p",null,[Da,e("a",Ga,[Ma,s(o)]),Ba,Wa,qa,Ua,Ha,Fa,Ka,za,Va]),Ya]),e("li",null,[e("p",null,[Ja,e("a",Xa,[Qa,s(o)]),Za,e("a",$a,[er,s(o)]),nr,sr,or,tr,ar,e("a",rr,[ir,s(o)]),lr,cr,dr,pr,hr,_r,ur,br,mr]),gr]),e("li",null,[e("p",null,[fr,e("a",kr,[vr,s(o)]),yr,wr,jr,Sr,Er]),Or]),Ar,e("li",null,[e("p",null,[Tr,e("a",xr,[Ir,s(o)]),Rr,e("a",Nr,[Cr,s(o)]),Pr,e("a",Lr,[Dr,s(o)]),Gr,Mr,Br,Wr,qr]),Ur]),e("li",null,[e("p",null,[Hr,Fr,Kr,e("a",zr,[Vr,s(o)]),Yr]),Jr]),Xr,e("li",null,[e("p",null,[Qr,Zr,$r,e("a",ei,[ni,s(o)]),si,oi,ti])])]),ai,e("p",null,[ri,e("a",ii,[li,s(o)]),ci,e("a",di,[pi,s(o)]),hi]),e("p",null,[e("a",_i,[ui,s(o)]),bi]),mi,e("p",null,[e("a",gi,[fi,s(o)]),ki]),vi,e("p",null,[yi,e("a",wi,[ji,s(o)]),Si,e("a",Ei,[Oi,s(o)]),Ai,e("a",Ti,[xi,s(o)]),Ii]),Ri,e("ul",null,[e("li",null,[e("a",Ni,[Ci,s(o)]),Pi,Li,Di,Gi]),e("li",null,[e("a",Mi,[Bi,s(o)]),Wi,e("a",qi,[Ui,s(o)]),Hi,Fi,Ki,zi,Vi]),e("li",null,[e("a",Yi,[Ji,s(o)]),Xi])]),Qi,e("p",null,[Zi,e("a",$i,[el,s(o)]),nl]),sl,e("ul",null,[ol,e("li",null,[tl,al,rl,il,e("a",ll,[cl,s(o)]),dl]),pl,e("li",null,[hl,_l,ul,bl,e("a",ml,[gl,s(o)]),fl]),e("li",null,[kl,vl,yl,wl,e("a",jl,[Sl,s(o)]),El]),e("li",null,[Ol,Al,Tl,xl,e("a",Il,[Rl,s(o)]),Nl]),e("li",null,[Cl,Pl,e("code",null,r(a.WEB_PROTOCOL)+"://"+r(a.WEB_HOST)+":"+r(a.WEB_PORT),1),Ll]),e("li",null,[Dl,Gl,e("a",Ml,[Bl,s(o)]),Wl]),e("li",null,[ql,Ul,e("a",Hl,[Fl,s(o)]),Kl]),e("li",null,[zl,Vl,e("a",Yl,[Jl,s(o)]),Xl]),e("li",null,[Ql,Zl,$l,ec,e("a",nc,[sc,s(o)]),oc]),e("li",null,[tc,ac,rc,ic,e("a",lc,[cc,s(o)]),dc]),e("li",null,[pc,hc,_c,uc,bc,mc,e("a",gc,[fc,s(o)]),kc]),e("li",null,[vc,yc,e("code",null,r(a.API_PROTOCOL)+"://"+r(a.API_HOST)+":"+r(a.API_PORT),1),wc,e("a",jc,[Sc,s(o)]),Ec]),e("li",null,[Oc,Ac,e("a",Tc,[xc,s(o)]),Ic]),e("li",null,[Rc,Nc,e("a",Cc,[Pc,s(o)]),Lc]),e("li",null,[Dc,Gc,e("a",Mc,[Bc,s(o)]),Wc]),e("li",null,[qc,Uc,e("a",Hc,[Fc,s(o)]),Kc,e("a",zc,[Vc,s(o)]),Yc]),e("li",null,[Jc,Xc,Qc,Zc,e("a",$c,[ed,s(o)]),nd]),e("li",null,[sd,od,e("a",td,[ad,s(o)]),rd]),id,e("li",null,[ld,cd,dd,pd,e("a",hd,[_d,s(o)]),ud]),e("li",null,[bd,md,gd,fd,e("a",kd,[vd,s(o)]),yd]),wd,e("li",null,[jd,Sd,Ed,Od,e("a",Ad,[Td,s(o)]),xd]),e("li",null,[Id,Rd,Nd,Cd,e("a",Pd,[Ld,s(o)]),Dd]),Gd,e("li",null,[Md,Bd,e("code",null,r(a.WEB_URL),1),Wd,e("a",qd,[Ud,s(o)]),Hd]),e("li",null,[Fd,Kd,zd,Vd,e("a",Yd,[Jd,s(o)]),Xd]),e("li",null,[Qd,Zd,$d,ep,e("a",np,[sp,s(o)]),op]),e("li",null,[tp,ap,rp,ip,e("a",lp,[cp,s(o)]),dp]),e("li",null,[pp,hp,_p,up,e("a",bp,[mp,s(o)]),gp]),e("li",null,[fp,kp,vp,yp,e("a",wp,[jp,s(o)]),Sp]),e("li",null,[Ep,Op,Ap,Tp,e("a",xp,[Ip,s(o)]),Rp]),e("li",null,[Np,Cp,Pp,Lp,e("a",Dp,[Gp,s(o)]),Mp]),e("li",null,[Bp,Wp,qp,Up,e("a",Hp,[Fp,s(o)]),Kp]),e("li",null,[zp,Vp,Yp,Jp,e("a",Xp,[Qp,s(o)]),Zp]),e("li",null,[$p,eh,nh,sh,e("a",oh,[th,s(o)]),ah]),e("li",null,[rh,ih,lh,ch,e("a",dh,[ph,s(o)]),hh]),e("li",null,[_h,uh,e("a",bh,[mh,s(o)]),gh]),e("li",null,[fh,kh,e("a",vh,[yh,s(o)]),wh]),e("li",null,[jh,Sh,e("a",Eh,[Oh,s(o)]),Ah]),e("li",null,[Th,xh,e("a",Ih,[Rh,s(o)]),Nh]),e("li",null,[Ch,Ph,e("a",Lh,[Dh,s(o)]),Gh]),e("li",null,[Mh,Bh,e("a",Wh,[qh,s(o)]),Uh]),e("li",null,[Hh,Fh,e("a",Kh,[zh,s(o)]),Vh]),e("li",null,[Yh,Jh,e("a",Xh,[Qh,s(o)]),Zh]),e("li",null,[$h,e_,e("a",n_,[s_,s(o)]),o_]),e("li",null,[t_,a_,e("a",r_,[i_,s(o)]),l_]),c_,e("li",null,[d_,p_,e("code",null,r(a.APP_NAME)+"_"+r(a.NODE_ENV),1),h_]),e("li",null,[__,u_,e("code",null,"mongodb://"+r(a.MONGO_HOST)+":"+r(a.MONGO_PORT)+"/"+r(a.MONGO_NAME),1),b_]),e("li",null,[m_,g_,e("a",f_,[k_,s(o)]),v_]),e("li",null,[y_,w_,e("a",j_,[S_,s(o)]),E_]),e("li",null,[O_,A_,e("a",T_,[x_,s(o)]),I_]),e("li",null,[R_,N_,e("a",C_,[P_,s(o)]),L_]),e("li",null,[D_,G_,e("a",M_,[B_,s(o)]),W_]),e("li",null,[q_,U_,e("a",H_,[F_,s(o)]),K_]),e("li",null,[z_,V_,e("a",Y_,[J_,s(o)]),X_]),e("li",null,[Q_,Z_,e("a",$_,[eu,s(o)]),nu]),e("li",null,[su,ou,e("a",tu,[au,s(o)]),ru]),e("li",null,[iu,lu,e("a",cu,[du,s(o)]),pu]),e("li",null,[hu,_u,e("a",uu,[bu,s(o)]),mu]),e("li",null,[gu,fu,e("a",ku,[vu,s(o)]),yu]),e("li",null,[wu,ju,e("a",Su,[Eu,s(o)]),Ou]),e("li",null,[Au,Tu,e("a",xu,[Iu,s(o)]),Ru]),e("li",null,[Nu,Cu,e("a",Pu,[Lu,s(o)]),Du]),e("li",null,[Gu,Mu,e("a",Bu,[Wu,s(o)]),qu]),e("li",null,[Uu,Hu,e("a",Fu,[Ku,s(o)]),zu]),e("li",null,[Vu,Yu,e("a",Ju,[Xu,s(o)]),Qu]),Zu,$u,eb,e("li",null,[nb,sb,e("a",ob,[tb,s(o)]),ab]),e("li",null,[rb,ib,e("a",lb,[cb,s(o)]),db]),e("li",null,[pb,hb,e("a",_b,[ub,s(o)]),bb]),e("li",null,[mb,gb,e("a",fb,[kb,s(o)]),vb]),e("li",null,[yb,wb,e("a",jb,[Sb,s(o)]),Eb]),e("li",null,[Ob,Ab,e("a",Tb,[xb,s(o)]),Ib]),e("li",null,[Rb,Nb,e("a",Cb,[Pb,s(o)]),Lb]),e("li",null,[Db,Gb,e("a",Mb,[Bb,s(o)]),Wb]),e("li",null,[qb,Ub,e("a",Hb,[Fb,s(o)]),Kb]),e("li",null,[zb,Vb,e("a",Yb,[Jb,s(o)]),Xb]),e("li",null,[Qb,Zb,e("a",$b,[em,s(o)]),nm]),e("li",null,[sm,om,e("a",tm,[am,s(o)]),rm]),e("li",null,[im,lm,e("a",cm,[dm,s(o)]),pm]),e("li",null,[hm,_m,e("a",um,[bm,s(o)]),mm]),gm,e("li",null,[fm,km,vm,ym,e("a",wm,[jm,s(o)]),Sm]),e("li",null,[Em,Om,e("a",Am,[Tm,s(o)]),xm])]),Im,e("ol",null,[e("li",null,[e("p",null,[Rm,e("a",Nm,[Cm,s(o)]),Pm])]),Lm]),Dm,e("p",null,[Gm,e("a",Mm,[Bm,s(o)]),Wm,qm,Um]),Hm,Fm,e("p",null,[Km,e("a",zm,[Vm,s(o)]),Ym]),Jm,Xm,e("ol",null,[e("li",null,[e("p",null,[Qm,e("a",Zm,[$m,s(o)]),eg,e("a",ng,[sg,s(o)]),og,e("a",tg,[ag,s(o)])])]),rg]),ig,e("ol",null,[e("li",null,[lg,e("a",cg,[dg,s(o)])]),pg,hg]),_g,e("p",null,[ug,e("a",bg,[mg,s(o)]),gg,e("a",fg,[kg,s(o)]),vg]),e("p",null,[yg,e("a",wg,[jg,s(o)]),Sg,e("a",Eg,[Og,s(o)]),Ag]),e("ol",null,[e("li",null,[e("p",null,[Tg,e("a",xg,[Ig,s(o)]),Rg])]),Ng,e("li",null,[Cg,e("blockquote",null,[e("p",null,[Pg,Lg,Dg,Gg,Mg,e("a",Bg,[Wg,s(o)]),qg])]),Ug]),e("li",null,[e("p",null,[Hg,e("a",Fg,[Kg,s(o)]),zg])]),Vg,Yg,Jg,Xg]),Qg,Zg,e("ol",null,[e("li",null,[e("p",null,[$g,e("a",ef,[nf,s(o)]),sf])]),of,e("li",null,[e("p",null,[tf,e("a",af,[rf,s(o)]),lf])]),cf,e("li",null,[e("p",null,[df,e("a",pf,[hf,s(o)]),_f])]),uf]),bf,e("ul",null,[e("li",null,[e("a",mf,[gf,s(o)])]),e("li",null,[e("a",ff,[kf,s(o)])])]),vf,e("ul",null,[e("li",null,[e("a",yf,[wf,s(o)])]),e("li",null,[e("a",jf,[Sf,s(o)])]),e("li",null,[e("a",Ef,[Of,s(o)])]),e("li",null,[e("a",Af,[Tf,s(o)]),xf]),e("li",null,[e("a",If,[Rf,s(o)])])]),Nf,e("ol",null,[Cf,e("li",null,[Pf,e("a",Lf,[Df,s(o)]),Gf,e("a",Mf,[Bf,s(o)]),Wf,e("a",qf,[Uf,s(o)]),Hf,e("a",Ff,[Kf,s(o)]),zf,e("a",Vf,[Yf,s(o)]),Jf,e("a",Xf,[Qf,s(o)]),Zf,e("a",$f,[e1,s(o)]),n1,e("a",s1,[o1,s(o)])]),e("li",null,[t1,e("a",a1,[r1,s(o)]),i1])]),l1,e("ul",null,[e("li",null,[e("a",c1,[d1,s(o)]),p1,e("a",h1,[_1,s(o)])]),e("li",null,[e("a",u1,[b1,s(o)]),m1,e("a",g1,[f1,s(o)]),k1,e("a",v1,[y1,s(o)]),w1,e("a",j1,[S1,s(o)]),E1,e("a",O1,[A1,s(o)])]),e("li",null,[e("a",T1,[x1,s(o)]),I1,e("a",R1,[N1,s(o)])])]),C1,e("p",null,[P1,e("a",L1,[D1,s(o)]),G1]),M1,e("table",null,[B1,e("tbody",null,[e("tr",null,[W1,e("td",null,[e("a",q1,[U1,s(o)])])]),e("tr",null,[H1,e("td",null,[e("a",F1,[K1,s(o)])])])])]),z1,e("p",null,[V1,Y1,e("a",J1,[X1,s(o)])]),Q1,Z1],64)}var sk=c(u,[["render",$1],["__file","index.html.vue"]]);export{sk as default};
